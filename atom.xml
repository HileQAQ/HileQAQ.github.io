<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hile_Meow&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-01T20:24:05.551Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Hile_Meow</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019CCPC哈尔滨</title>
    <link href="http://example.com/2021/11/01/2019CCPC%E5%93%88%E5%B0%94%E6%BB%A8/"/>
    <id>http://example.com/2021/11/01/2019CCPC%E5%93%88%E5%B0%94%E6%BB%A8/</id>
    <published>2021-11-01T07:42:31.000Z</published>
    <updated>2021-11-01T20:24:05.551Z</updated>
    
    <content type="html"><![CDATA[<p>离谱，不知道现场判题机究竟多快，反正A和E带log疯狂TLE产生大量垃圾时间导致打银了。</p><h2 id="A-Artful-Paintings"><a href="#A-Artful-Paintings" class="headerlink" title="A. Artful Paintings"></a>A. Artful Paintings</h2><p>差分约束。考虑将黑色位置设为$1$，否则为$0$，设到第$i$个位置的前缀和为$S_i$，则</p><ul><li>对于第一种限制，满足$S_R-S_{L-1}\ge K$</li><li>对于第二种限制，满足$S_N-S_R+S_{L-1}\ge K$，由于$S_N$有单调性，可以先二分答案。</li></ul><p>显然这是一个差分约束系统，除了上述约束外还有$0\le S_i-S_{i-1}\le1,\ 0\le S_i $，建图判断如果有负环则不合法。</p><p>（题外话：SPFA全程TLE，Bellman-Ford直接AC，关于SPFA，它死了）</p><h2 id="B-Binary-Numbers"><a href="#B-Binary-Numbers" class="headerlink" title="B. Binary Numbers"></a>B. Binary Numbers</h2><h2 id="C-Competition-in-Swiss-system"><a href="#C-Competition-in-Swiss-system" class="headerlink" title="C. Competition in Swiss-system"></a>C. Competition in Swiss-system</h2><h2 id="E-Exchanging-Gifts"><a href="#E-Exchanging-Gifts" class="headerlink" title="E. Exchanging Gifts"></a>E. Exchanging Gifts</h2><p>拓扑排序，摩尔投票法。建反图求出每个第一类操作的贡献，然后map$O(n\log n)$或摩尔投票法$O(n)$求众数。设众数出现次数$x$，总数为$n$，答案为$max(0,2x-n)$。</p><h2 id="L-LRU-Algorithm"><a href="#L-LRU-Algorithm" class="headerlink" title="L. LRU Algorithm"></a>L. LRU Algorithm</h2><p>hash，字典树。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;离谱，不知道现场判题机究竟多快，反正A和E带log疯狂TLE产生大量垃圾时间导致打银了。&lt;/p&gt;
&lt;h2 id=&quot;A-Artful-Paintings&quot;&gt;&lt;a href=&quot;#A-Artful-Paintings&quot; class=&quot;headerlink&quot; title=&quot;A. A</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020吉林省赛</title>
    <link href="http://example.com/2021/11/01/2020%E5%90%89%E6%9E%97%E7%9C%81%E8%B5%9B/"/>
    <id>http://example.com/2021/11/01/2020%E5%90%89%E6%9E%97%E7%9C%81%E8%B5%9B/</id>
    <published>2021-11-01T07:42:17.000Z</published>
    <updated>2021-11-01T20:07:31.181Z</updated>
    
    <content type="html"><![CDATA[<p>NEERC之后的减压省赛，差点被碰到绝活题的瓜队爆杀。由于签到题太多，题解只写几道有价值的。</p><h2 id="D-Trie"><a href="#D-Trie" class="headerlink" title="D. Trie"></a>D. Trie</h2><p><strong>AC自动机fail树上dfs序建<del>可持久化</del>线段树</strong>。</p><p>对联题。</p><h2 id="H-Curious"><a href="#H-Curious" class="headerlink" title="H. Curious"></a>H. Curious</h2><p>数论。属于是莫反裸题了，用$c_i$表示$i$在$a$中的出现次数，则有</p><p>$\sum_{i=1}^{n}\sum_{j=1}^{n}[gcd(i,j)=x]c_ic_j$</p><p>$=\sum_{i=1}^{\frac{n}{x}}\sum_{j=1}^{\frac{n}{x}}[gcd(i,j)=1]c_{ix}c_{jx}$</p><p>$=\sum_{i=1}^{\frac{n}{x}}\sum_{j=1}^{\frac{n}{x}}\sum_{d|gcd(i,j)}\mu(d)c_{ix}c_{jx}$</p><p>$=\sum_{d=1}^{\frac{n}{x}}\mu(d)\sum_{i=1}^{\frac{n}{xd}}\sum_{j=1}^{\frac{n}{xd}}c_{ixd}c_{jxd}$</p><p>$O(n\log n)$预处理后面那一块，然后对于每一个$x$调和级数暴力算答案，总复杂度$O(n\log n)$。</p><h2 id="I-World-Tree"><a href="#I-World-Tree" class="headerlink" title="I. World Tree"></a>I. World Tree</h2><p>贪心，dp。首先考虑树形dp，但是不会处理同层子树选择的优先级，考虑最优子结构贪心：</p><p>设</p><h2 id="J-Situation"><a href="#J-Situation" class="headerlink" title="J. Situation"></a>J. Situation</h2><p>博弈，记忆化搜索。一共$2\times3^9$种状态，每种状态会转移到后继最值，复杂度$O(2\times9\times3^9)$，不熟悉的话可以补一补17女生赛的J题。</p><h2 id="M-Upanishad"><a href="#M-Upanishad" class="headerlink" title="M. Upanishad"></a>M. Upanishad</h2><p>数据结构。首先考虑如果询问改成求区间内所有出现次数为奇数的数的异或和，那么答案就是该区间的异或和，所以，$出现次数为偶数的数的异或和=区间异或和\oplus区间set的异或和$，关键就是求出区间所有数的$set$。</p><p>考虑离线，枚举区间右端点，记录某数最后出现的位置，然后更新到树状数组上同时消除之前的影响以保证每个数只会出现一次，对于每个询问用树状数组求区间异或和即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;NEERC之后的减压省赛，差点被碰到绝活题的瓜队爆杀。由于签到题太多，题解只写几道有价值的。&lt;/p&gt;
&lt;h2 id=&quot;D-Trie&quot;&gt;&lt;a href=&quot;#D-Trie&quot; class=&quot;headerlink&quot; title=&quot;D. Trie&quot;&gt;&lt;/a&gt;D. Trie&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2018-2019 ICPC, NEERC, Northern Eurasia Finals</title>
    <link href="http://example.com/2021/11/01/2018-2019-ICPC-NEERC-Northern-Eurasia-Finals/"/>
    <id>http://example.com/2021/11/01/2018-2019-ICPC-NEERC-Northern-Eurasia-Finals/</id>
    <published>2021-11-01T07:41:54.000Z</published>
    <updated>2021-11-01T19:28:58.308Z</updated>
    
    <content type="html"><![CDATA[<p>加训以来打的最艰难的一场，同时也是最难补题的一场，只能说欧洲的题目风格和中国还是差别不小，尤其是代码实现上的难度。</p><h2 id="A-Alice-the-Fan"><a href="#A-Alice-the-Fan" class="headerlink" title="A. Alice the Fan"></a>A. Alice the Fan</h2><p>dp打表。19徐州打铁的教训：<strong>能暴力就不要分类讨论</strong>。</p><p>考虑$f_{a,b,c,d}$表示当前大比分为$a:b$，小比分为$c:d$时是否可行（用bool类型存储），状态数共$3\times3\times200\times200$种。预处理出一局种合法的小比分情况，显然少于$400$种，因此可以$O(400)$进行dp时转移，总复杂度大概$O(1.2\times10^8)$，同时开一个数组记录$dp$转移的路径以输出答案。</p><h2 id="B-Bitmatching"><a href="#B-Bitmatching" class="headerlink" title="B. Bitmatching"></a>B. Bitmatching</h2><h2 id="C-Cactus-Search"><a href="#C-Cactus-Search" class="headerlink" title="C. Cactus Search"></a>C. Cactus Search</h2><p>仙人掌背景的交互题，待补。</p><h2 id="D-Distance-Sum"><a href="#D-Distance-Sum" class="headerlink" title="D. Distance Sum"></a>D. Distance Sum</h2><h2 id="E-Easy-Chess"><a href="#E-Easy-Chess" class="headerlink" title="E. Easy Chess"></a>E. Easy Chess</h2><p>签到。</p><h2 id="F-Fractions"><a href="#F-Fractions" class="headerlink" title="F. Fractions"></a>F. Fractions</h2><h2 id="G-Guest-Student"><a href="#G-Guest-Student" class="headerlink" title="G. Guest Student"></a>G. Guest Student</h2><p>签到。</p><h2 id="H-Harder-Satisfiability"><a href="#H-Harder-Satisfiability" class="headerlink" title="H. Harder Satisfiability"></a>H. Harder Satisfiability</h2><h2 id="I-Interval-Free-Permutations"><a href="#I-Interval-Free-Permutations" class="headerlink" title="I. Interval-Free Permutations"></a>I. Interval-Free Permutations</h2><p>计数，析合树。</p><p>题解待补充。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">400</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,p;</span><br><span class="line">ll fac[N],f[N],g[N][N],h[N];</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll n=p<span class="number">-2</span>,ll m=p)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    a%=m;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)res=res*a%m;</span><br><span class="line">        a=a*a%m,n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    n=<span class="number">400</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T&gt;&gt;p;</span><br><span class="line">    f[<span class="number">1</span>]=fac[<span class="number">0</span>]=g[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    f[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">        fac[i]=fac[i<span class="number">-1</span>]*i%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=i;k++)&#123;</span><br><span class="line">                g[i][j]=(g[i][j]+g[i-k][j<span class="number">-1</span>]*fac[k]%p)%p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        h[i]=fac[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            h[i]=(h[i]-h[j]*fac[i-j]%p+p)%p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=fac[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            f[i]=(f[i]-h[j]*<span class="number">2</span>%p*fac[i-j]%p+p)%p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">4</span>;j&lt;i;j++)&#123;</span><br><span class="line">            f[i]=(f[i]-g[i][j]*f[j]%p+p)%p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;f[n]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="J-JS-Minification"><a href="#J-JS-Minification" class="headerlink" title="J. JS Minification"></a>J. JS Minification</h2><h2 id="K-King-Kog’s-Reception"><a href="#K-King-Kog’s-Reception" class="headerlink" title="K. King Kog’s Reception"></a>K. King Kog’s Reception</h2><h2 id="L-Lazyland"><a href="#L-Lazyland" class="headerlink" title="L. Lazyland"></a>L. Lazyland</h2><p>签到。</p><h2 id="M-Minegraphed"><a href="#M-Minegraphed" class="headerlink" title="M. Minegraphed"></a>M. Minegraphed</h2><p>构造，模拟。赛中先tarjan缩点然后隔一层构造$3\times(2n+1)$的层，这层分三个部分，如图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.............</span><br><span class="line">#+#+#+#+#+#+#</span><br><span class="line">.............</span><br></pre></td></tr></table></figure><p>其中第$1,3$行为上层的落点和去往下层的洞，利用同层’+’的位置设置DAG的可达关系。</p><p>由于写起来过于模拟导致结束前5min才过，但是赛后发现好像有缩点都不用的简单写法，补完其它题学一下。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;加训以来打的最艰难的一场，同时也是最难补题的一场，只能说欧洲的题目风格和中国还是差别不小，尤其是代码实现上的难度。&lt;/p&gt;
&lt;h2 id=&quot;A-Alice-the-Fan&quot;&gt;&lt;a href=&quot;#A-Alice-the-Fan&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2021山东省赛</title>
    <link href="http://example.com/2021/10/23/2021%E5%B1%B1%E4%B8%9C%E7%9C%81%E8%B5%9B/"/>
    <id>http://example.com/2021/10/23/2021%E5%B1%B1%E4%B8%9C%E7%9C%81%E8%B5%9B/</id>
    <published>2021-10-23T15:23:36.000Z</published>
    <updated>2021-11-01T19:00:39.760Z</updated>
    
    <content type="html"><![CDATA[<p>这场7题没啥难度，但之后是真的难开，补一道卡一道，本来是要补10题的，考虑难度和效果就改9题了。</p><h2 id="A-Beta-Go"><a href="#A-Beta-Go" class="headerlink" title="A. Beta Go"></a>A. Beta Go</h2><p>待补，详见<a href="https://waberzhuang.github.io/2021/10/17/%E7%BB%84%E9%98%9F%E8%B5%9B%E8%AE%AD%E7%BB%83/2021-%E5%B1%B1%E4%B8%9C%E7%9C%81%E8%B5%9B/">ZAwei的博客</a>。</p><h2 id="B-Build-Roads"><a href="#B-Build-Roads" class="headerlink" title="B. Build Roads"></a>B. Build Roads</h2><p>随机化。$n$较大时答案大概率为$n-1$，较小时暴力，注意$L=R$的情况。</p><h2 id="C-Cat-Virus"><a href="#C-Cat-Virus" class="headerlink" title="C. Cat Virus"></a>C. Cat Virus</h2><p>构造。考虑对题目增加限制：要求构造出来的必须是二叉树。当某点左子树答案为$A$，右子树答案为$B$，则该点子树的答案为$A\times B+1$，只有一个孩子的结点答案是孩子的答案$+1$，所以可以递归构造出$k$。</p><h2 id="D-Dyson-Box"><a href="#D-Dyson-Box" class="headerlink" title="D. Dyson Box"></a>D. Dyson Box</h2><p>签到。考虑重力向下，第$i$列高为$h_i$，答案就是</p><p>$有方块的位置数\times2+\sum_{i=1}^{n+1}|h_i-h_{i-1}|(h_{i+1}=0)$。</p><h2 id="E-Evaluate-Expression"><a href="#E-Evaluate-Expression" class="headerlink" title="E. Evaluate Expression"></a>E. Evaluate Expression</h2><h2 id="F-Birthday-Cake"><a href="#F-Birthday-Cake" class="headerlink" title="F. Birthday Cake"></a>F. Birthday Cake</h2><p>字符串。hash老题了，考虑两个字符$a,b\ (len(a)\le len(b))$串拼接后合法的情况：</p><ul><li>$a,b$相同</li><li>$b$的前$\frac{len(a)+len(b)}{2}$个字符是拼接后串的一半</li></ul><p>$map$记录一下就行，小心被卡模数和自然溢出。</p><h2 id="G-Grade-Point-Average"><a href="#G-Grade-Point-Average" class="headerlink" title="G. Grade Point Average"></a>G. Grade Point Average</h2><p>签到。</p><h2 id="H-Adventurer’s-Guild"><a href="#H-Adventurer’s-Guild" class="headerlink" title="H. Adventurer’s Guild"></a>H. Adventurer’s Guild</h2><p>签到。</p><h2 id="I-Chemical-Code"><a href="#I-Chemical-Code" class="headerlink" title="I. Chemical Code"></a>I. Chemical Code</h2><p>线段树。考虑当加入一个元素、数字、括号时产生的影响：</p><p>元素：相当于单点加，如果后继是数字则要：</p><ol><li>减去数字的影响（区间除）</li><li>单点修改，加某个值</li><li>加上数字的影响（区间乘）</li></ol><p>数字：相当于区间乘，如果前驱是括号则：</p><ol><li>找到配对的另一个括号</li><li>将括号扩起的区间乘某个值</li></ol><p>括号：如果后继是数字，处理方法和元素相同</p><p>但是，由于模数不是质数，这个区间除就很麻烦了（需要CRT）。但是考虑数字只有$1-9$，因此可以将复杂度$\times10$，懒标记永久化维护$1-9$在线段树上每个节点乘的次数，由于每次都是查询1到n，所以不用pushdown，常数还巨小。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">985151223</span>;</span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line">ll p[<span class="number">10</span>][N];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">int</span>&gt; mp=&#123;&#123;<span class="string">&#x27;C&#x27;</span>,<span class="number">12</span>&#125;,&#123;<span class="string">&#x27;H&#x27;</span>,<span class="number">1</span>&#125;,&#123;<span class="string">&#x27;O&#x27;</span>,<span class="number">16</span>&#125;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tag</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> mul[<span class="number">10</span>];</span><br><span class="line">    Tag()&#123;</span><br><span class="line">        <span class="built_in">memset</span>(mul,<span class="number">0</span>,<span class="keyword">sizeof</span> mul);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">cal</span><span class="params">(ll w)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">            w=w*p[i][mul[i]]%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SegmentTree</span>&#123;</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> lson o&lt;&lt;1,l,mid</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rson o&lt;&lt;1|1,mid+1,r</span></span><br><span class="line">    ll a[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">    Tag b[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">        a[o]=b[o&lt;&lt;<span class="number">1</span>].cal(a[o&lt;&lt;<span class="number">1</span>])+b[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].cal(a[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">        a[o]%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">            a[o]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        build(lson);</span><br><span class="line">        build(rson);</span><br><span class="line">        pushup(o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> P,<span class="keyword">int</span> X)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">            a[o]+=X;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(P&lt;=mid)add(lson,P,X);</span><br><span class="line">        <span class="keyword">else</span> add(rson,P,X);</span><br><span class="line">        pushup(o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">multi</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R,<span class="keyword">int</span> X,<span class="keyword">int</span> Y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">            b[o].mul[X]+=Y;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=mid)multi(lson,L,R,X,Y);</span><br><span class="line">        <span class="keyword">if</span>(R&gt;mid)multi(rson,L,R,X,Y);</span><br><span class="line">        pushup(o);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;T;</span><br><span class="line"><span class="keyword">int</span> vis[N],l[N],r[N];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getpre</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> k=se.lower_bound(p);</span><br><span class="line">    <span class="keyword">if</span>(k==se.begin())<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> *--k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getnxt</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> k=se.upper_bound(p);</span><br><span class="line">    <span class="keyword">if</span>(k==se.end())<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> *k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">op1</span><span class="params">(<span class="keyword">char</span> ch,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w=mp[ch];</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(ch))&#123;</span><br><span class="line">        vis[x]=w;</span><br><span class="line">        <span class="keyword">int</span> pre=getpre(x);</span><br><span class="line">        assert(pre!=<span class="number">-1</span>);</span><br><span class="line">        T.multi(<span class="number">1</span>,<span class="number">1</span>,n,l[pre],pre,w,<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> nxt=getnxt(x);</span><br><span class="line">        <span class="keyword">int</span> pre=getpre(x);</span><br><span class="line">        <span class="keyword">if</span>(nxt!=<span class="number">-1</span>&amp;&amp;vis[nxt]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre!=<span class="number">-1</span>)&#123;</span><br><span class="line">                T.multi(<span class="number">1</span>,<span class="number">1</span>,n,l[pre],pre,vis[nxt],<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            T.multi(<span class="number">1</span>,<span class="number">1</span>,n,x,x,vis[nxt],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        T.add(<span class="number">1</span>,<span class="number">1</span>,n,x,w);</span><br><span class="line">    &#125;</span><br><span class="line">    l[x]=r[x]=x;</span><br><span class="line">    se.insert(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">op2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    l[y]=x;</span><br><span class="line">    r[x]=y;</span><br><span class="line">    <span class="keyword">int</span> nxt=getnxt(y);</span><br><span class="line">    <span class="keyword">int</span> pre=getpre(y);</span><br><span class="line">    se.insert(x);</span><br><span class="line">    se.insert(y);</span><br><span class="line">    vis[x]=vis[y]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(nxt!=<span class="number">-1</span>&amp;&amp;vis[nxt]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pre!=<span class="number">-1</span>)&#123;</span><br><span class="line">            T.multi(<span class="number">1</span>,<span class="number">1</span>,n,l[pre],pre,vis[nxt],<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        T.multi(<span class="number">1</span>,<span class="number">1</span>,n,x,y,vis[nxt],<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">        mp[i+<span class="string">&#x27;0&#x27;</span>]=i;</span><br><span class="line">        p[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;N;j++)&#123;</span><br><span class="line">            p[i][j]=p[i][j<span class="number">-1</span>]*i%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> op,x,l,r;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch&gt;&gt;x;</span><br><span class="line">            op1(ch,x);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line">            op2(l,r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;T.b[<span class="number">1</span>].cal(T.a[<span class="number">1</span>])&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="J-Tuition-Agent"><a href="#J-Tuition-Agent" class="headerlink" title="J. Tuition Agent"></a>J. Tuition Agent</h2><h2 id="K-Piggy-Calculator"><a href="#K-Piggy-Calculator" class="headerlink" title="K. Piggy Calculator"></a>K. Piggy Calculator</h2><p>感觉很厉害，有时间就补。</p><h2 id="L-Construction-of-5G-Base-Station"><a href="#L-Construction-of-5G-Base-Station" class="headerlink" title="L. Construction of 5G Base Station"></a>L. Construction of 5G Base Station</h2><p>概率dp。考虑用$f_{i,j}$表示$i$连到$j$位置的基站的概率，则有</p><p>$f_{i,j}=\frac{p_j}{1-\prod^{n}_{k=1}{(1-p_k)}}\prod_{i到k比j优先}(1-p_k)$</p><p>直观来理解，$p_j$下面那一串是$i$连遍所有基站都失败的概率，后面那一块就是$i$和优先于$j$的所有基站都匹配失败的概率。</p><p>【前置芝士1：一次试验为真的概率为$p$，如果失败会重复直到为真结束，则其期望结束次数为$\frac{1}{p}$】</p><p>（考虑等比数列求和 或 解方程：$E(x)=p\times0+(1-p)\times E(x)+1$即可证明）</p><p>设$E(x_i)$为匹配到基站$i$的人个数的期望，则有</p><p>$E(x_i)=\frac{p_i}{1-\prod^{n}_{k=1}{(1-p_k)}}\sum_{j=1}^{n}\prod_{j到k比i优先}(1-p_k)$</p><p>然后题解说，<strong>容易发现</strong>这东西后一块能用前缀和递推，（赛中感觉不可以递推就没搞，下次遇到这种最好打打草稿看看规律）</p><p><strong>一顿操作</strong>能$O(n)$求出$i\in[1,n]$的$E(x_i)$，</p><p>（PS：这里$Hile$改了2h才过）</p><p>但是题目要求的是$E(\sum_{i=1}^{n}{x_i}^2)$，这时就要利用期望的线性性拆开了。</p><p>【前置芝士2：如果变量$X,Y$相互独立，则$E(X+Y)=E(X)+E(Y), E(XY)=E(X)E(Y)$】</p><p>$E(\sum_{i=1}^{n}x_i^2)=\sum_{i=1}^{n}E(x_i^2)$，</p><p>此时，对于每一个$E(x_i^2)$，$x_i$可以看作$n$个变量$y$之和，其中$y_i=1$表示第$i$个人连接了该基站，所以有</p><p>$E(x)=\sum_{i=1}^{n}E(y_i)$</p><p>原式可写为</p><p>$E((\sum_{i=1}^{n}y_i)^2)=(E(x))^2-\sum_{i=1}^{n}(E(y_i))^2+E(x)$</p><p>其中$\sum_{i=1}^n(E(y_i))^2$可以在求$E(x)$的过程中一起计算。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,p[N],q[N],f[N],g[N],s[N],t[N],A[<span class="number">2</span>][N],B[<span class="number">2</span>][N];</span><br><span class="line">ll S=<span class="number">1</span>,ans;</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll n=MOD<span class="number">-2</span>,ll m=MOD)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    a%=m;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)res=res*a%m;</span><br><span class="line">        a=a*a%m,n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        p[x]=y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        q[i]=(<span class="number">1</span>-p[i]+MOD)%MOD;</span><br><span class="line">        s[i]=i==<span class="number">0</span>?<span class="number">1</span>:<span class="number">1ll</span>*s[i<span class="number">-1</span>]*q[i]%MOD;</span><br><span class="line">        S=S*q[i]%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        t[i]=i==n+<span class="number">1</span>?<span class="number">1</span>:<span class="number">1ll</span>*t[i+<span class="number">1</span>]*q[i]%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        A[<span class="number">0</span>][i]=i==<span class="number">1</span>?<span class="number">0</span>:(i==<span class="number">2</span>?q[<span class="number">1</span>]:(<span class="number">1ll</span>*A[<span class="number">0</span>][i<span class="number">-2</span>]*q[i<span class="number">-1</span>]%MOD*q[i<span class="number">-2</span>]%MOD+s[i<span class="number">-1</span>]+<span class="number">1ll</span>*q[i<span class="number">-1</span>]*q[i<span class="number">-2</span>]%MOD)%MOD);</span><br><span class="line">        A[<span class="number">1</span>][i]=i==<span class="number">1</span>?<span class="number">0</span>:(i==<span class="number">2</span>?<span class="number">1ll</span>*q[<span class="number">1</span>]*q[<span class="number">1</span>]%MOD:(<span class="number">1ll</span>*A[<span class="number">1</span>][i<span class="number">-2</span>]*q[i<span class="number">-1</span>]%MOD*q[i<span class="number">-2</span>]%MOD*q[i<span class="number">-1</span>]%MOD*q[i<span class="number">-2</span>]%MOD+<span class="number">1ll</span>*s[i<span class="number">-1</span>]*s[i<span class="number">-1</span>]+<span class="number">1ll</span>*q[i<span class="number">-1</span>]*q[i<span class="number">-2</span>]%MOD*q[i<span class="number">-1</span>]%MOD*q[i<span class="number">-2</span>]%MOD)%MOD);</span><br><span class="line">        f[i]=(f[i]+A[<span class="number">0</span>][i])%MOD;</span><br><span class="line">        g[i]=(g[i]+A[<span class="number">1</span>][i])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        B[<span class="number">0</span>][i]=i==n?<span class="number">0</span>:(i==n<span class="number">-1</span>?q[n]:(<span class="number">1ll</span>*B[<span class="number">0</span>][i+<span class="number">2</span>]*q[i+<span class="number">1</span>]%MOD*q[i+<span class="number">2</span>]%MOD+t[i+<span class="number">1</span>]+q[i+<span class="number">1</span>])%MOD);</span><br><span class="line">        B[<span class="number">1</span>][i]=i==n?<span class="number">0</span>:(i==n<span class="number">-1</span>?<span class="number">1ll</span>*q[n]*q[n]%MOD:(<span class="number">1ll</span>*B[<span class="number">1</span>][i+<span class="number">2</span>]*q[i+<span class="number">1</span>]%MOD*q[i+<span class="number">2</span>]%MOD*q[i+<span class="number">1</span>]%MOD*q[i+<span class="number">2</span>]%MOD+<span class="number">1ll</span>*t[i+<span class="number">1</span>]*t[i+<span class="number">1</span>]%MOD+<span class="number">1ll</span>*q[i+<span class="number">1</span>]*q[i+<span class="number">1</span>]%MOD)%MOD);</span><br><span class="line">        f[i]=(f[i]+B[<span class="number">0</span>][i])%MOD;</span><br><span class="line">        g[i]=(g[i]+B[<span class="number">1</span>][i])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]++,g[i]++;</span><br><span class="line">    &#125;</span><br><span class="line">    S=qpow(<span class="number">1</span>-S+MOD);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i]=<span class="number">1ll</span>*f[i]*p[i]%MOD*S%MOD;</span><br><span class="line">        g[i]=<span class="number">1ll</span>*g[i]*p[i]%MOD*p[i]%MOD*S%MOD*S%MOD;</span><br><span class="line">        f[i]=(<span class="number">1ll</span>*f[i]*f[i]%MOD-g[i]+MOD+f[i])%MOD;</span><br><span class="line">        ans=(ans+f[i])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="M-Matrix-Problem"><a href="#M-Matrix-Problem" class="headerlink" title="M. Matrix Problem"></a>M. Matrix Problem</h2><p>签到。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这场7题没啥难度，但之后是真的难开，补一道卡一道，本来是要补10题的，考虑难度和效果就改9题了。&lt;/p&gt;
&lt;h2 id=&quot;A-Beta-Go&quot;&gt;&lt;a href=&quot;#A-Beta-Go&quot; class=&quot;headerlink&quot; title=&quot;A. Beta Go&quot;&gt;&lt;/a&gt;A.</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2021CCPC东北四省赛</title>
    <link href="http://example.com/2021/10/19/2021CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/"/>
    <id>http://example.com/2021/10/19/2021CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/</id>
    <published>2021-10-19T00:14:22.000Z</published>
    <updated>2021-10-19T06:57:44.660Z</updated>
    
    <content type="html"><![CDATA[<p>都1202年了竟然有比赛会出模板题（主要是没带模板，战犯++</p><h2 id="A-Matrix"><a href="#A-Matrix" class="headerlink" title="A. Matrix"></a>A. Matrix</h2><p>一开始的思路是计算前$n$个数分布在恰好$k$行的方案数，然后考虑了容斥、斯特林数等一堆东西，发现又重又漏。</p><p>写完H，在Awei写C的时候突然反应过来，对于每个数在一行作为最小值的情况计算贡献完全没问题且公式简洁，遂ac。</p><p><strong>当一道被a穿的题想不出来时，及时转换思路防止钻牛角尖。</strong></p><p>（笑死，思路想歪，2h签不出到）</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Solution</span></div>    <div class="xContent"><div class="inner">        <p>$n\times(n^2-n)!\times\sum_{i=1}^{i=n}{n^2-i\choose n-1}$</p>     </div></div>    </div><h2 id="B-Cypher"><a href="#B-Cypher" class="headerlink" title="B. Cypher"></a>B. Cypher</h2><p>五页的题面三个字：大模拟。但其实听队友一说好像难度$90\%$都在读题上，属于是出题人不怀好意了（</p><p>题意建议自己读，体验一下（）</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">55</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,p,q,d[N],b[N];</span><br><span class="line"><span class="built_in">string</span> s[N],t[N],r,all=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="keyword">char</span>&gt; mp,mr;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    s[i]=s[i].substr(k,<span class="number">26</span>)+s[i].substr(<span class="number">0</span>,k);</span><br><span class="line">    t[i]=t[i].substr(k,<span class="number">26</span>)+t[i].substr(<span class="number">0</span>,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">query</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        b[i]++;</span><br><span class="line">        rotate(i,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(b[i]%<span class="number">26</span>==<span class="number">0</span>&amp;&amp;i&lt;=n)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> id=mp[c]-<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        id=t[i][id];</span><br><span class="line">        id=s[i].find(id);</span><br><span class="line">    &#125;</span><br><span class="line">    id=all[id];</span><br><span class="line">    id=r.find(id);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        id=s[i][id];</span><br><span class="line">        id=t[i].find(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mp[id+<span class="string">&#x27;A&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            mp[i+<span class="string">&#x27;A&#x27;</span>]=i+<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=p;i++)&#123;</span><br><span class="line">            <span class="built_in">string</span> tmp;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">            mp[tmp[<span class="number">0</span>]]=tmp[<span class="number">1</span>];</span><br><span class="line">            mp[tmp[<span class="number">1</span>]]=tmp[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">            t[i]=all;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;d[i];</span><br><span class="line">            b[i]=d[i];</span><br><span class="line">            rotate(i,d[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;r;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            mr[<span class="string">&#x27;A&#x27;</span>+i]=r[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;q;</span><br><span class="line">        <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">            <span class="built_in">string</span> tmp;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> i:tmp)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;query(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="C-Vertex-Deletion"><a href="#C-Vertex-Deletion" class="headerlink" title="C. Vertex Deletion"></a>C. Vertex Deletion</h2><h2 id="D-Lowbit"><a href="#D-Lowbit" class="headerlink" title="D. Lowbit"></a>D. Lowbit</h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Solution</span></div>    <div class="xContent"><div class="inner">        <p>属于是势能线段树裸题了，势能函数$f(x)$为将$x$变为$2^k$的操作次数，显然$\max\{f(x)\}=log_2(x)$，所以可以维护一个标记来表示区间内的数都为$2$的幂次，当一个区间被标记时，$1$操作就变成了区间乘二。复杂度$O(n\log^2 n)$。</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b[N];</span><br><span class="line"><span class="function">ll <span class="title">lowbit</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SegmentTree</span>&#123;</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> lson o&lt;&lt;1,l,mid</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rson o&lt;&lt;1|1,mid+1,r</span></span><br><span class="line">    ll val[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> tag[N&lt;&lt;<span class="number">2</span>],all[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        tag[o]=<span class="number">1</span>,all[o]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(l==r)&#123;</span><br><span class="line">            val[o]=a[l],all[o]=!b[l].size();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        build(lson);</span><br><span class="line">        build(rson);</span><br><span class="line">        all[o]=all[o&lt;&lt;<span class="number">1</span>]+all[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">        val[o]=(val[o&lt;&lt;<span class="number">1</span>]+val[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pd</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">        tag[o]=<span class="number">1LL</span>*tag[o]*k%MOD;</span><br><span class="line">        val[o]=<span class="number">1LL</span>*val[o]*k%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o)</span></span>&#123;</span><br><span class="line">        pd(o&lt;&lt;<span class="number">1</span>,tag[o]);</span><br><span class="line">        pd(o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,tag[o]);</span><br><span class="line">        tag[o]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">            <span class="keyword">if</span>(all[o]==r-l+<span class="number">1</span>)&#123;</span><br><span class="line">                pd(o,<span class="number">2</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l==r&amp;&amp;!all[o])&#123;</span><br><span class="line">                val[o]=(val[o]+b[l].back())%MOD;</span><br><span class="line">                b[l].pop_back();</span><br><span class="line">                <span class="keyword">if</span>(!b[l].size())all[o]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        pushdown(o);</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=mid)update(lson,L,R);</span><br><span class="line">        <span class="keyword">if</span>(R&gt;mid)update(rson,L,R);</span><br><span class="line">        all[o]=all[o&lt;&lt;<span class="number">1</span>]+all[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">        val[o]=(val[o&lt;&lt;<span class="number">1</span>]+val[o&lt;&lt;<span class="number">1</span>|<span class="number">1</span>])%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> o,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R,ll res=<span class="number">0</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=l&amp;&amp;r&lt;=R)&#123;</span><br><span class="line">            <span class="keyword">return</span> val[o];</span><br><span class="line">        &#125;</span><br><span class="line">        pushdown(o);</span><br><span class="line">        <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(L&lt;=mid)(res+=query(lson,L,R))%=MOD;</span><br><span class="line">        <span class="keyword">if</span>(R&gt;mid)(res+=query(rson,L,R))%=MOD;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;S;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">            b[i].clear();</span><br><span class="line">            ll tmp=a[i];</span><br><span class="line">            <span class="keyword">while</span>(__builtin_popcount(tmp)!=<span class="number">1</span>)&#123;</span><br><span class="line">                b[i].push_back((lowbit(tmp))%MOD);</span><br><span class="line">                tmp+=lowbit(tmp);</span><br><span class="line">            &#125;</span><br><span class="line">            reverse(b[i].begin(),b[i].end());</span><br><span class="line">        &#125;</span><br><span class="line">        S.build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> op,l,r;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;op&gt;&gt;l&gt;&gt;r;</span><br><span class="line">            <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">                S.update(<span class="number">1</span>,<span class="number">1</span>,n,l,r);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;S.query(<span class="number">1</span>,<span class="number">1</span>,n,l,r)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="E-Easy-Math-Problem"><a href="#E-Easy-Math-Problem" class="headerlink" title="E. Easy Math Problem"></a>E. Easy Math Problem</h2><p>签到。Hile_Meow病发，wa一发才过。</p><h2 id="F-Permutation"><a href="#F-Permutation" class="headerlink" title="F. Permutation"></a>F. Permutation</h2><h2 id="G-Ball"><a href="#G-Ball" class="headerlink" title="G. Ball"></a>G. Ball</h2><h2 id="H-Loneliness"><a href="#H-Loneliness" class="headerlink" title="H. Loneliness"></a>H. Loneliness</h2><p>给出一个$n\times n$的矩阵，你的分数初始为$1$。当分数为$x$时，往上下左右分别会变成$x/2,x\times2,x+2,x-2$（往上时$x$必须为偶数），给出一个$k$，要求输出从$(1,1)$到$(n,n)$的一条路径（可重复经过$(n,n)$在内的点）使得在终点时分数恰好为$k$。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Solution</span></div>    <div class="xContent"><div class="inner">        <p>构造。考虑$n=100$，有足够的空间去构造答案，所以不妨倒过来想$k$是怎么构造出来的（考虑二进制），可以发现能根据$k$找到一个点$P(x,y)$满足在$P$点的答案为$0$，只往右或往下就能在$(n,n)$恰好得到$k$。由于$k\le 10^{16}&lt;2^{60}$，$P$肯定在矩阵中。</p><p>然后考虑上下左右移动就是对于$2$的加减乘除：假设初始为偶数$x$，则$x$依次右上左下移动会得到$x+2,x/2+1,x/2-1,x-2$，也就是说$x$可以这么转一圈然后原地减$2$。</p><p>问题解决了，首先二进制分解$k$求出$P$点。第一步往下移动到$(2,1)$，当前答案为$2$，通过转圈操作使答案保持为$0$，逐步右移到和$P$同纵坐标，然后就一路往下到$P$，再构造$k$就好了。题目要求操作数小于$1000$，每次转圈消耗$4$步，从$(1,1)$到$(100,100)$需要$198$步，构造的答案显然小于$1000$。</p><p>（这种构造题建议给出充足的时间让不上机的队友玩，玩着玩着就出了）</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <p>赛中代码有点丑，不放了。</p>     </div></div>    </div><h2 id="I-Takeaway"><a href="#I-Takeaway" class="headerlink" title="I. Takeaway"></a>I. Takeaway</h2><p>签到。Boboge秒了。</p><h2 id="J-Transform"><a href="#J-Transform" class="headerlink" title="J. Transform"></a>J. Transform</h2><p>求三维点绕三维向量旋转某角度之后的结果。</p><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Solution</span></div>    <div class="xContent"><div class="inner">        <p><strong>Rodriguez Formula</strong>板子题。</p><p>向量$v$绕<strong>单位向量</strong>$u$旋转$\theta$后的$v’$为</p><p>$v’=v\cos\theta+u(u·v)(1-\cos\theta)+(u\times v)\sin\theta$</p><p>（其中 $·$ 为三维点乘，$\times$为三维叉乘）</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Solution</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z;</span><br><span class="line">    Point(<span class="keyword">double</span> x=<span class="number">0</span>,<span class="keyword">double</span> y=<span class="number">0</span>,<span class="keyword">double</span> z=<span class="number">0</span>):x(x),y(y),z(z)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(x*x+y*y+z*z);&#125;</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span>*(<span class="keyword">const</span> Point &amp;b) <span class="keyword">const</span>&#123;<span class="keyword">return</span> x*b.x+y*b.y+z*b.z;&#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point &amp;t) &#123;<span class="keyword">return</span> Point(x+t.x,y+t.y,z+t.z);&#125;</span><br><span class="line">    Point <span class="keyword">operator</span> ^ (<span class="keyword">const</span> Point &amp;t) &#123;<span class="keyword">return</span> Point(y*t.z-t.y*z,t.x*z-x*t.z,x*t.y-t.x*y);&#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">double</span> t) &#123;<span class="keyword">return</span> Point(x*t,y*t,z*t);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; Vector;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Length</span><span class="params">(Point a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(a*a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Vector <span class="title">Rotate</span><span class="params">(Vector u,Vector v,<span class="keyword">double</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> len=Length(u);</span><br><span class="line">    u=u*(<span class="number">1.0</span>/len);</span><br><span class="line">    <span class="keyword">return</span> v*<span class="built_in">cos</span>(r)+u*(u*v)*(<span class="number">1.0</span>-<span class="built_in">cos</span>(r))+(u^v)*<span class="built_in">sin</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        Point a,b;</span><br><span class="line">        <span class="keyword">double</span> r;</span><br><span class="line">        a.read(),b.read();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;r);</span><br><span class="line">        r=r*PI/<span class="number">180.0</span>;</span><br><span class="line">        Vector P=Rotate(a,b,r);</span><br><span class="line">        Vector Q=Rotate(a,b,-r);</span><br><span class="line">        <span class="keyword">if</span>(P.z&gt;Q.z)swap(P,Q);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.9f %.9f %.9f\n&quot;</span>,Q.x,Q.y,Q.z);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="K-City"><a href="#K-City" class="headerlink" title="K. City"></a>K. City</h2><p>签到。Boboge秒了。</p><h2 id="L-k-th-Smallest-Common-Substring"><a href="#L-k-th-Smallest-Common-Substring" class="headerlink" title="L. k-th Smallest Common Substring"></a>L. k-th Smallest Common Substring</h2><h2 id="M-Master-of-Shuangpin"><a href="#M-Master-of-Shuangpin" class="headerlink" title="M. Master of Shuangpin"></a>M. Master of Shuangpin</h2><p>签到。Boboge秒了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;都1202年了竟然有比赛会出模板题（主要是没带模板，战犯++&lt;/p&gt;
&lt;h2 id=&quot;A-Matrix&quot;&gt;&lt;a href=&quot;#A-Matrix&quot; class=&quot;headerlink&quot; title=&quot;A. Matrix&quot;&gt;&lt;/a&gt;A. Matrix&lt;/h2&gt;&lt;p&gt;一开始的思路</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2020CCPC东北四省赛</title>
    <link href="http://example.com/2021/10/15/2020CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/"/>
    <id>http://example.com/2021/10/15/2020CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/</id>
    <published>2021-10-15T15:52:07.000Z</published>
    <updated>2021-10-19T00:13:29.026Z</updated>
    
    <content type="html"><![CDATA[<p>10.15打的组队赛，感觉自从使用了战术之后发挥稳定了不少，出了9/12题。</p><p>战术：Hile_Meow非必要不上机，Hile_Meow所读题意必让队友确认（经典wa签到+读歪题）</p><h2 id="A-Micro-Structure-Thread"><a href="#A-Micro-Structure-Thread" class="headerlink" title="A. Micro Structure Thread"></a>A. Micro Structure Thread</h2><p>构造+MST。待补</p><h2 id="B-Team"><a href="#B-Team" class="headerlink" title="B. Team"></a>B. Team</h2><p>网络流。考虑通过源汇点的流量控制$m$个组合，然后$B$向$A$建边，$A$向$C$建边，流量为1，费用为预处理的$f(u,v)$，$A$拆点控制流量为1。</p><p>虽然是求最大权值，但是因为所有路径长度相同，我们可以令每条边的权值为$M-f(u,v)$，然后跑dijkstra费用流，或者直接边权取反上spfa费用流（可处理负权边）。</p><h2 id="C-Function"><a href="#C-Function" class="headerlink" title="C. Function"></a>C. Function</h2><p>数学。显然$f(x)\le x$，而且根据这个后缀积的不可构造性，猜测大概率会收敛到一个$f(x)=x$的值（如$k000001$或一个个位数），看榜上过的挺快就直接冲了一发记忆化+暴力，跑得飞快。</p><h2 id="D-Fall-Guys"><a href="#D-Fall-Guys" class="headerlink" title="D. Fall Guys"></a>D. Fall Guys</h2><p>签到。Boboge秒了。</p><h2 id="E-Liner-vectors"><a href="#E-Liner-vectors" class="headerlink" title="E. Liner vectors"></a>E. Liner vectors</h2><p>构造。首先显然$n=k$且$n\ne 1$时无解，然后考虑当$k\%2=0$时，每一维度形成的列向量异或为0，说明任意列向量都等于其他$n-1$个列向量的异或和，矩阵不满秩。</p><p>接下来就好构造了，前$k+1$个向量的前$k+1$位形成一个对角线为0的矩阵，后面的行直接对前面$n-k-1$位每行分配一个$1$，每行剩下的$1$全放在最低的$k-1$位。</p><p><del>赛中写的唯一一道题，还被n=1,k=1卡了一发</del></p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>||n==k)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;ll&gt; ve;</span><br><span class="line">        ll tmp=<span class="number">1LL</span>&lt;&lt;(k+<span class="number">1</span>);</span><br><span class="line">        tmp--;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            ve.push_back(tmp^(<span class="number">1LL</span>&lt;&lt;i));</span><br><span class="line">        &#125;</span><br><span class="line">        tmp&gt;&gt;=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k+<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            ve.push_back(tmp^(<span class="number">1LL</span>&lt;&lt;i));</span><br><span class="line">        &#125;</span><br><span class="line">        sort(ve.begin(),ve.end());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld%c&quot;</span>,ve[i<span class="number">-1</span>],i==n?<span class="string">&#x27;\n&#x27;</span>:<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        run();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="F-Splendor"><a href="#F-Splendor" class="headerlink" title="F. Splendor"></a>F. Splendor</h2><p>贪心+大模拟的防ak。貌似不太可做</p><h2 id="G-Halli-Galli"><a href="#G-Halli-Galli" class="headerlink" title="G. Halli Galli"></a>G. Halli Galli</h2><p>签到。Boboge秒了。</p><h2 id="H-PepperLa’s-String"><a href="#H-PepperLa’s-String" class="headerlink" title="H. PepperLa’s String"></a>H. PepperLa’s String</h2><p>贪心。既然要优先最短，其次字典序最小。</p><p>分两类位置：</p><ol><li>使字符串长度变短：删单个字符，删两个字符之一，删$16^k$个连续字符一端</li><li>使字符串长度不变：删连续相同字符一端</li></ol><p>有第一类优先删第一类，如果能让字典序变小则删第一个能让字典序变小的，否则删最后一个第一类位置。</p><p>如果没有第一类位置，则删第一个字符。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> len[N];</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">tohex</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss&lt;&lt;hex&lt;&lt;x;</span><br><span class="line">    <span class="built_in">string</span> t;</span><br><span class="line">    ss&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i:t)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">islower</span>(i))&#123;</span><br><span class="line">            i+=<span class="string">&#x27;A&#x27;</span>-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    s.push_back(<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt; p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;s.size();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i<span class="number">-1</span>]!=s[i])&#123;</span><br><span class="line">            p.push_back(&#123;s[i<span class="number">-1</span>],cnt&#125;);</span><br><span class="line">            cnt=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>,les=N,mor=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p.size();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i].second==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i+<span class="number">1</span>==p.size()||p[i].first&gt;p[i+<span class="number">1</span>].first)&#123;</span><br><span class="line">                les=min(les,i);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mor=i;</span><br><span class="line">            &#125;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(p[i].second==<span class="number">2</span>)&#123;</span><br><span class="line">            mor=i;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(len[p[i].second<span class="number">-1</span>]!=len[p[i].second])&#123;</span><br><span class="line">            mor=i;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="keyword">if</span>(les&lt;N)&#123;</span><br><span class="line">            p[les].second--;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            p[mor].second--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        p[<span class="number">0</span>].second--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:p)&#123;</span><br><span class="line">        <span class="keyword">char</span> ch=i.first;</span><br><span class="line">        <span class="keyword">int</span>  cnt=i.second;</span><br><span class="line">        <span class="keyword">if</span>(!cnt)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ch;</span><br><span class="line">        <span class="built_in">string</span> tmp=tohex(cnt);</span><br><span class="line">        <span class="keyword">if</span>(tmp!=<span class="string">&quot;1&quot;</span>)<span class="built_in">cout</span>&lt;&lt;tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    len[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">        len[i]=len[i/<span class="number">16</span>]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="I-PepperLa’s-Cram-School"><a href="#I-PepperLa’s-Cram-School" class="headerlink" title="I. PepperLa’s Cram School"></a>I. PepperLa’s Cram School</h2><p>图论，小坑。由于边长相同，答案即为$d[i][j]$中最小值出现次数$/2$（一条边贡献两次），注意最小边权不一定是$1$。</p><h2 id="J-Color-the-blocks"><a href="#J-Color-the-blocks" class="headerlink" title="J. Color the blocks"></a>J. Color the blocks</h2><p>签到。从$(x,y)$到$(x+1,y+2),(x-1,y+2),(x+3,y),(x-3,y)$建边，答案即为$2^{连通块数}$，显然$n\ge4$时答案为$4$，其他手算一下就好了。</p><h2 id="K-PepperLa’s-Boast"><a href="#K-PepperLa’s-Boast" class="headerlink" title="K. PepperLa’s Boast"></a>K. PepperLa’s Boast</h2><p>dp。考虑$f[i][j]$表示在$(i,j)$处的答案，则每次转移只会从左、上、左上移动过来或者从以$(i,j)$为右下角的一个$k\times k$的矩形转移而来，也就是说要$O(1)$求出左上矩形内的最大值，这就是二维单调队列裸题了。</p><p>二维单调队列：对每行和每列都开一个单调队列，先把答案更新到该列中，再用该列的答案更新该行。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,u,a[N][N];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">ll f[N][N];</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="built_in">pair</span>&lt;ll,ll&gt;&gt; col[N],row[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initQ</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(row[i].size())&#123;</span><br><span class="line">            row[i].pop_back();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(col[i].size())&#123;</span><br><span class="line">            col[i].pop_back();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="built_in">deque</span>&lt;<span class="built_in">pair</span>&lt;ll,ll&gt;&gt; &amp;q,<span class="built_in">pair</span>&lt;ll,ll&gt; x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(q.size()&amp;&amp;q.back().first&lt;=x.first)&#123;</span><br><span class="line">        q.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">    q.push_back(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">top</span><span class="params">(<span class="built_in">deque</span>&lt;<span class="built_in">pair</span>&lt;ll,ll&gt;&gt; &amp;q,ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(q.size()&amp;&amp;q.front().second&lt;=x)q.pop_front();</span><br><span class="line">    <span class="keyword">if</span>(q.size())<span class="keyword">return</span> q.front().first;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k&gt;&gt;u)&#123;k++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">                f[i][j]=-INF;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        initQ(n,m);</span><br><span class="line">        f[<span class="number">1</span>][<span class="number">1</span>]=a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        push(col[<span class="number">1</span>],&#123;f[<span class="number">1</span>][<span class="number">1</span>],<span class="number">1</span>&#125;);</span><br><span class="line">        push(row[<span class="number">1</span>],&#123;f[<span class="number">1</span>][<span class="number">1</span>],<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>+(i==<span class="number">1</span>);j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                    f[i][j]=<span class="number">-1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">3</span>;t++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(ok(i-dx[t],j-dy[t])&amp;&amp;f[i-dx[t]][j-dy[t]]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                            f[i][j]=max(f[i][j],f[i-dx[t]][j-dy[t]]+a[i][j]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ll t=max(top(row[i],j-k),top(col[j],i-k));</span><br><span class="line">                    <span class="keyword">if</span>(t&gt;=<span class="number">0</span>)f[i][j]=max(f[i][j],t+a[i][j]-u);</span><br><span class="line">                &#125;</span><br><span class="line">                push(col[j],&#123;f[i][j],i&#125;);</span><br><span class="line">                push(row[i],&#123;top(col[j],i-k),j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;max(<span class="number">-1LL</span>,f[n][m])&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="L-PepperLa’s-Express"><a href="#L-PepperLa’s-Express" class="headerlink" title="L. PepperLa’s Express"></a>L. PepperLa’s Express</h2><p>搜索。首先遇到$\min$和$\max$来回套的题，第一反应必是二分答案。考虑二分了一个答案$mid$，可以先做一个bfs把所有已经和’@’距离在$mid$内的’*‘搞掉，然后考虑求出距离每个位置最远的’*‘，如果存在某个空格最远距离小于$mid$，说明可以把新的’@’放在这里使答案不大于$mid$。</p><p>赛中其实讨论了一个憨批做法，对于每一维来回扫一遍，从一维更新到三维，复杂度$O(8XYZ)$，但是写起来有点恶心，而且好像会爆空间，赛中没写完。</p><p>看出题人的方法有点牛，既然是找距离最远的点，那必然是$|x_i-x_j|+|y_i-y_j|+|z_i-z_j|$最大，我们可以把里面的正负号拆开，$i,j$各存$2^3$种，我们可以直接在为长为3的二进制互为补集的两种组合中求答案。</p><p>感觉这个拆绝对值符号的思路挺好，而且代码写起来也很简洁。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> h,n,m;</span><br><span class="line"><span class="keyword">char</span> s[N][N][N];</span><br><span class="line"><span class="keyword">int</span> d[N][N][N];</span><br><span class="line"><span class="keyword">int</span> f[N][N][N];</span><br><span class="line"><span class="keyword">int</span> g[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">6</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dz[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> sgn[<span class="number">2</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ok</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=<span class="number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="number">1</span>&amp;&amp;y&lt;=m&amp;&amp;z&gt;=<span class="number">1</span>&amp;&amp;z&lt;=h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=h;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!d[k][i][j])&#123;</span><br><span class="line">                    q.push(&#123;i,j,k&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.size())&#123;</span><br><span class="line">        node p=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">6</span>;t++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x=p.x+dx[t];</span><br><span class="line">            <span class="keyword">int</span> y=p.y+dy[t];</span><br><span class="line">            <span class="keyword">int</span> z=p.z+dz[t];</span><br><span class="line">            <span class="keyword">if</span>(ok(x,y,z)&amp;&amp;d[z][x][y]==<span class="number">-1</span>)&#123;</span><br><span class="line">                d[z][x][y]=d[p.z][p.x][p.y]+<span class="number">1</span>;</span><br><span class="line">                q.push(&#123;x,y,z&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=h+<span class="number">1</span>;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m+<span class="number">1</span>;j++)&#123;</span><br><span class="line">                f[k][i][j]=-INF;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(g,<span class="number">-0x3f</span>,<span class="keyword">sizeof</span> g);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=h;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[k][i][j]==<span class="string">&#x27;*&#x27;</span>&amp;&amp;d[k][i][j]&gt;mid)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">8</span>;t++)&#123;</span><br><span class="line">                        g[t]=max(g[t],k*sgn[(t)&amp;<span class="number">1</span>]+i*sgn[(t&gt;&gt;<span class="number">1</span>)&amp;<span class="number">1</span>]+j*sgn[(t&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=h;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s[k][i][j]==<span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">8</span>;t++)&#123;</span><br><span class="line">                        res=max(res,g[t^<span class="number">7</span>]+k*sgn[(t)&amp;<span class="number">1</span>]+i*sgn[(t&gt;&gt;<span class="number">1</span>)&amp;<span class="number">1</span>]+j*sgn[(t&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(res&lt;=mid)&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;h&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=h;k++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;s[k][i][j];</span><br><span class="line">                    d[k][i][j]=<span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(s[k][i][j]==<span class="string">&#x27;@&#x27;</span>)&#123;</span><br><span class="line">                        d[k][i][j]=<span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bfs();</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=h+n+m,ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">                ans=mid;</span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;10.15打的组队赛，感觉自从使用了战术之后发挥稳定了不少，出了9/12题。&lt;/p&gt;
&lt;p&gt;战术：Hile_Meow非必要不上机，Hile_Meow所读题意必让队友确认（经典wa签到+读歪题）&lt;/p&gt;
&lt;h2 id=&quot;A-Micro-Structure-Thread&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="组队训练" scheme="http://example.com/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>2017CCPC女生赛</title>
    <link href="http://example.com/2021/10/15/2017CCPC%E5%A5%B3%E7%94%9F%E8%B5%9B/"/>
    <id>http://example.com/2021/10/15/2017CCPC%E5%A5%B3%E7%94%9F%E8%B5%9B/</id>
    <published>2021-10-15T14:24:16.000Z</published>
    <updated>2021-10-15T18:05:10.410Z</updated>
    
    <content type="html"><![CDATA[<p>最近组队赛有点拉跨，于是个人vp加训，写写题解。</p><h2 id="A-Automatic-Judge"><a href="#A-Automatic-Judge" class="headerlink" title="A - Automatic Judge"></a>A - Automatic Judge</h2><p>签到，模拟。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;&gt; ve[<span class="number">22</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,a,b,c;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> d[<span class="number">22</span>];</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d %d:%d %s&quot;</span>,&amp;a,&amp;b,&amp;c,d);</span><br><span class="line">            <span class="keyword">int</span> t=b*<span class="number">60</span>+c;</span><br><span class="line">            <span class="keyword">if</span>(d[<span class="number">0</span>]==<span class="string">&#x27;A&#x27;</span>&amp;&amp;d[<span class="number">1</span>]==<span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">                ve[a<span class="number">-1000</span>].push_back(&#123;t,<span class="number">1</span>&#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ve[a<span class="number">-1000</span>].push_back(&#123;t,<span class="number">0</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">            sort(ve[i].begin(),ve[i].end());</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> j:ve[i])&#123;</span><br><span class="line">                <span class="keyword">if</span>(j.second)&#123;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    ans+=s+j.first;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    s+=<span class="number">20</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,cnt,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="B-Building-Shops"><a href="#B-Building-Shops" class="headerlink" title="B - Building Shops"></a>B - Building Shops</h2><p>dp。先对每个pair按照位置排序，$f[i][j]$为考虑前$i$个点，上一次选在$j$时的答案，则有</p><p>$f[i][j]=min(f[i][j],f[i-1][j]+x[i]-x[j])(i!=j)$</p><p>$f[i][j]=min(f[i][j],f[i-1][j]+c[i])(i==j)$</p><p>最终答案为$max(\{f[n][1…n]\})$。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,x[N],c[N];</span><br><span class="line">ll f[N][N];</span><br><span class="line"><span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; p[N];</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sort(p+<span class="number">1</span>,p+<span class="number">1</span>+n);</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>]=p[<span class="number">1</span>].second;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            f[i][j]=min(f[i][j],f[i<span class="number">-1</span>][j]+p[i].first-p[j].first);</span><br><span class="line">            f[i][i]=min(f[i][i],f[i<span class="number">-1</span>][j]+p[i].second);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *min_element(f[n]+<span class="number">1</span>,f[n]+<span class="number">1</span>+n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,x+i,c+i);</span><br><span class="line">            p[i]=&#123;x[i],c[i]&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,solve());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="C-Coprime-Sequence"><a href="#C-Coprime-Sequence" class="headerlink" title="C - Coprime Sequence"></a>C - Coprime Sequence</h2><p>签到，处理出前后缀$\gcd$然后枚举删的位置。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[N];</span><br><span class="line"><span class="keyword">int</span> l[N],r[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            l[i]=__gcd(l[i<span class="number">-1</span>],a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        r[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            r[i]=__gcd(r[i+<span class="number">1</span>],a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=max(r[<span class="number">2</span>],l[n<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)&#123;</span><br><span class="line">            ans=max(ans,__gcd(l[i<span class="number">-1</span>],r[i+<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="D-Deleting-Edges"><a href="#D-Deleting-Edges" class="headerlink" title="D - Deleting Edges"></a>D - Deleting Edges</h2><p>图论。考虑最终形成的是一棵以0为根的生成树，可以枚举最后形成的树中每个点连向父亲的那条边，对每个结点来说，删边方案是相互独立的（因为树上每个点的父亲唯一），乘起来就是最终答案。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">50</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[N][N],b[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">                b[i][j]=a[i][j];</span><br><span class="line">                <span class="keyword">if</span>(!b[i][j])b[i][j]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">                <span class="keyword">if</span>(i==j)b[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[i][k]&amp;&amp;b[k][j])&#123;</span><br><span class="line">                    b[i][j]=min(b[i][j],b[i][k]+b[k][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">            ll res=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j][i]&amp;&amp;b[<span class="number">0</span>][j]+a[j][i]==b[<span class="number">0</span>][i])&#123;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=ans*res%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="E-Easy-Summation"><a href="#E-Easy-Summation" class="headerlink" title="E - Easy Summation"></a>E - Easy Summation</h2><p>签到，怎么做都行。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">ll ans[<span class="number">6</span>][N];</span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll n=MOD<span class="number">-2</span>,ll m=MOD)</span></span>&#123;</span><br><span class="line">    ll res=<span class="number">1</span>;</span><br><span class="line">    a%=m;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)res=res*a%m;</span><br><span class="line">        a=a*a%m,n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;N;j++)&#123;</span><br><span class="line">            ans[i][j]=(ans[i][j<span class="number">-1</span>]+qpow(j,i))%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans[m][n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="F-Forgiveness"><a href="#F-Forgiveness" class="headerlink" title="F - Forgiveness"></a>F - Forgiveness</h2><p>赛中没过，待补。感觉是个$O(10\times n\times\sqrt{n}\times\log{n})$的分块（应该没有$\log{n}$？）。</p><p>（后记：Claris出的防AK，据说要bitset搞搞）</p><h2 id="G-Graph-Theory"><a href="#G-Graph-Theory" class="headerlink" title="G - Graph Theory"></a>G - Graph Theory</h2><p>图论。考虑每个1和前面的2匹配，剩下的1两两匹配，剩下2或者n为奇数就是No。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">        a[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt&gt;<span class="number">0</span>)cnt--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>((cnt==<span class="number">0</span>&amp;&amp;n%<span class="number">2</span>==<span class="number">0</span>)?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="H-Happy-Necklace"><a href="#H-Happy-Necklace" class="headerlink" title="H - Happy Necklace"></a>H - Happy Necklace</h2><p>打表，数学。题意等价求长为n且两个0的距离大于2的01串的方案数，赛中人工打了个表(2,3,4,6,9,13)，发现是$f[n]=f[n-1]+f[n-3]$，矩阵快速幂即可。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> K=<span class="number">3</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mat</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[K][K];</span><br><span class="line">    mat()&#123;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);&#125;</span><br><span class="line">    <span class="keyword">int</span>* <span class="keyword">operator</span> [] (<span class="keyword">int</span> i)&#123;<span class="keyword">return</span> a[i];&#125;</span><br><span class="line">    mat <span class="keyword">operator</span> * (mat b)&#123;</span><br><span class="line">        mat res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>;k++)&#123;</span><br><span class="line">                    (res[i][j]+=<span class="number">1LL</span>*a[i][k]*b[k][j]%MOD)%=MOD;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">mat <span class="title">qpow</span><span class="params">(mat a,ll n)</span></span>&#123;</span><br><span class="line">    mat res;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        res.a[i][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)res=res*a;</span><br><span class="line">        a=a*a,n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">ll n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        mat A,B;</span><br><span class="line">        A[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        A[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">        A[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">3</span>;</span><br><span class="line">        B[<span class="number">2</span>][<span class="number">1</span>]=B[<span class="number">0</span>][<span class="number">2</span>]=B[<span class="number">1</span>][<span class="number">0</span>]=B[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        A=A*qpow(B,n<span class="number">-2</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,A[<span class="number">0</span>][<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="I-Innumerable-Ancestors"><a href="#I-Innumerable-Ancestors" class="headerlink" title="I - Innumerable Ancestors"></a>I - Innumerable Ancestors</h2><p>树论。结论：$k$个点中LCA深度最大的两点dfs序一定相邻（考虑反证法），所以对集合A,B按照dfs序排序并双指针处理。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100000</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k1,k2,dfn[N],tot,a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> dep[N],fa[N][<span class="number">20</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> pre=<span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    dep[u]=dep[pre]+<span class="number">1</span>;</span><br><span class="line">    fa[u][<span class="number">0</span>]=pre;</span><br><span class="line">    dfn[u]=++tot;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> v:G[u])</span><br><span class="line">        <span class="keyword">if</span>(v!=pre)</span><br><span class="line">            dfs(v,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            fa[j][i]=fa[fa[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[u]&lt;dep[v])swap(u,v);</span><br><span class="line">    <span class="keyword">int</span> d=dep[u]-dep[v];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=d;i++)</span><br><span class="line">        <span class="keyword">if</span>(d&amp;(<span class="number">1</span>&lt;&lt;i))u=fa[u][i];</span><br><span class="line">    <span class="keyword">if</span>(u==v)<span class="keyword">return</span> u;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">17</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="keyword">if</span>(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];</span><br><span class="line">    <span class="keyword">return</span> fa[u][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dfn[a]&lt;dfn[b];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m))&#123;</span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            G[i].clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(dep,<span class="number">0</span>,<span class="keyword">sizeof</span> dep);</span><br><span class="line">        <span class="built_in">memset</span>(fa,<span class="number">0</span>,<span class="keyword">sizeof</span> fa);</span><br><span class="line">        <span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span> dfn);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,u,v;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);</span><br><span class="line">            G[u].push_back(v);</span><br><span class="line">            G[v].push_back(u);</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(<span class="number">1</span>);</span><br><span class="line">        init(n);</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k1);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k1;i++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k2);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k2;i++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,b+i);</span><br><span class="line">            &#125;</span><br><span class="line">            sort(a+<span class="number">1</span>,a+<span class="number">1</span>+k1,cmp);</span><br><span class="line">            sort(b+<span class="number">1</span>,b+<span class="number">1</span>+k2,cmp);</span><br><span class="line">            <span class="keyword">int</span> p=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">1</span>;q&lt;=k2;q++)&#123;</span><br><span class="line">                <span class="keyword">while</span>(p+<span class="number">1</span>&lt;=k1&amp;&amp;dfn[a[p+<span class="number">1</span>]]&lt;=dfn[b[q]])&#123;</span><br><span class="line">                    p++;</span><br><span class="line">                &#125;</span><br><span class="line">                ans=max(ans,dep[lca(a[p],b[q])]);</span><br><span class="line">            &#125;</span><br><span class="line">            p=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">1</span>;q&lt;=k2;q++)&#123;</span><br><span class="line">                <span class="keyword">while</span>(p+<span class="number">1</span>&lt;=k1&amp;&amp;dfn[a[p]]&lt;=dfn[b[q]])&#123;</span><br><span class="line">                    p++;</span><br><span class="line">                &#125;</span><br><span class="line">                ans=max(ans,dep[lca(a[p],b[q])]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="J-Judicious-Strategy"><a href="#J-Judicious-Strategy" class="headerlink" title="J - Judicious Strategy"></a>J - Judicious Strategy</h2><p>博弈，打表。直接$O(n^3\log n)$预处理出所有子串及其权值，然后打表，记录一个$(win,A,B)$的三元组表示胜负状态和玩家分数，注意一个字符串中的同一个子串只算出现一次（如”aaaa”中，”aa”的出现次数为1）。</p> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>Code</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">30</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; mp,w;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> win,S[<span class="number">2</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,node&gt; f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getW</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)&#123;</span><br><span class="line">        mx=max(mx,s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>);</span><br><span class="line">        sum+=s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum*mx+mp[s];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node <span class="title">dfs</span><span class="params">(<span class="built_in">string</span> s,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q=<span class="number">1</span>^p;</span><br><span class="line">    <span class="keyword">if</span>(f.count(s))<span class="keyword">return</span> f[s];</span><br><span class="line">    node res;</span><br><span class="line">    res.win=<span class="number">0</span>;</span><br><span class="line">    res.S[p]=-INF;</span><br><span class="line">    res.S[q]=INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">string</span> tt;</span><br><span class="line">        tt.push_back(<span class="keyword">char</span>(i+<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        <span class="built_in">string</span> t=tt+s;</span><br><span class="line">        <span class="keyword">if</span>(mp.count(t))&#123;</span><br><span class="line">            node tmp=dfs(t,q);</span><br><span class="line">            <span class="keyword">if</span>(tmp.win==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp.S[p]==res.S[p]&amp;&amp;tmp.S[q]&lt;res.S[q]||tmp.S[p]&gt;res.S[p])&#123;</span><br><span class="line">                    res=tmp;</span><br><span class="line">                &#125;</span><br><span class="line">                res.win=<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(res.win==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp.S[p]==res.S[p]&amp;&amp;tmp.S[q]&lt;res.S[q]||tmp.S[p]&gt;res.S[p])&#123;</span><br><span class="line">                    res=tmp;</span><br><span class="line">                &#125;</span><br><span class="line">                res.win=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        t=s+tt;</span><br><span class="line">        <span class="keyword">if</span>(mp.count(t))&#123;</span><br><span class="line">            node tmp=dfs(t,q);</span><br><span class="line">            <span class="keyword">if</span>(tmp.win==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp.S[p]==res.S[p]&amp;&amp;tmp.S[q]&lt;res.S[q]||tmp.S[p]&gt;res.S[p])&#123;</span><br><span class="line">                    res=tmp;</span><br><span class="line">                &#125;</span><br><span class="line">                res.win=<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(res.win==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp.S[p]==res.S[p]&amp;&amp;tmp.S[q]&lt;res.S[q]||tmp.S[p]&gt;res.S[p])&#123;</span><br><span class="line">                    res=tmp;</span><br><span class="line">                &#125;</span><br><span class="line">                res.win=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res.win==<span class="number">0</span>&amp;&amp;res.S[p]==-INF)&#123;</span><br><span class="line">        res.S[<span class="number">0</span>]=res.S[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.S[q]+=w[s];</span><br><span class="line">    <span class="keyword">return</span> f[s]=res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    mp.clear();</span><br><span class="line">    w.clear();</span><br><span class="line">    f.clear();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; se;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s[i].size();j++)&#123;</span><br><span class="line">            <span class="built_in">string</span> tmp;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;s[i].size();k++)&#123;</span><br><span class="line">                tmp.push_back(s[i][k]);</span><br><span class="line">                se.insert(tmp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j:se)&#123;</span><br><span class="line">            mp[j]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:mp)&#123;</span><br><span class="line">        w[i.first]=getW(i.first);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> emp;</span><br><span class="line">    node res=dfs(emp,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(res.win==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Bob\n&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Alice\n&quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res.S[<span class="number">0</span>]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;res.S[<span class="number">1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近组队赛有点拉跨，于是个人vp加训，写写题解。&lt;/p&gt;
&lt;h2 id=&quot;A-Automatic-Judge&quot;&gt;&lt;a href=&quot;#A-Automatic-Judge&quot; class=&quot;headerlink&quot; title=&quot;A - Automatic Judge&quot;&gt;&lt;/a&gt;A</summary>
      
    
    
    
    <category term="个人训练" scheme="http://example.com/categories/%E4%B8%AA%E4%BA%BA%E8%AE%AD%E7%BB%83/"/>
    
    
    <category term="题解" scheme="http://example.com/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>计算数论习题选证</title>
    <link href="http://example.com/2021/02/09/%E8%AE%A1%E7%AE%97%E6%95%B0%E8%AE%BA%E4%B9%A0%E9%A2%98%E9%80%89%E8%AF%81/"/>
    <id>http://example.com/2021/02/09/%E8%AE%A1%E7%AE%97%E6%95%B0%E8%AE%BA%E4%B9%A0%E9%A2%98%E9%80%89%E8%AF%81/</id>
    <published>2021-02-08T18:57:50.000Z</published>
    <updated>2021-02-08T21:18:20.448Z</updated>
    
    <content type="html"><![CDATA[<p>这是为《A Computational Introduction to Number Theory and Algebra （Version 2）》（<a href="https://www.shoup.net/ntb/">资源</a>）中某些和ACM用数论有关的习题写的证明。<del>还没看完，好难QAQ</del></p><p><strong>EXERCISE 1.17</strong></p><p>已知正整数$a,b,c$满足$\gcd(a,b)=1$，$c\ge(a-1)(b-1)$，</p><p>求证：总是存在非负整数$s,t$满足$c=as+bt$</p><p>证明1：</p><p>当$s\in[0,b-1]$时$as$模$b$的结果恰好构成$b$的完全剩余系，</p><p>所以存在$s\in[0,b-1]$使$n\equiv as\mod b$成立，</p><p>此时$bt=c-as\ge (a-1)(b-1)-as=(b-1-s)a-(b-1)\ge -b+1$，</p><p>即$t\ge\frac{-b+1}{b}&gt;\frac{-b}{b}=-1$。$\Box$</p><p>证明2：</p><p>考虑其$c=as+bt$存在非整数解$(s,t)$的几何意义，</p><p>即直线$y=-\frac{b}{a}x+\frac{c}{a}$在第一象限（含坐标轴）过任意整点。</p><p><strong>EXERCISE 1.27</strong></p><p>已知$a,b\in Z$，</p><p>求证：$\gcd(a+b,\mathrm{lcm}(a,b))=\gcd(a,b)$</p><p>证明：</p><p>设$d=\gcd(a,b),s=\frac{a}{d},t=\frac{b}{d}$，</p><p>易知$\gcd(s,t)=1$，</p><p>$\gcd(a+b,\mathrm{lcm}(a,b))$</p><p>$=\gcd(d(s+t),\frac{ab}{d})$</p><p>$=d\gcd(s+t,st)$</p><p>又因$(s+t)\nmid s$且$(s+t)\nmid t$，$\gcd(s+t,st)=1$，</p><p>即$\gcd(a+b,\mathrm{lcm}(a,b))=d=\gcd(a,b)$。$\Box$</p><p><strong>EXERCISE 2.10</strong></p><p>求证：不存在$a,b$满足$7a^3+2=b^3$</p><p>证明：</p><p>若$7a^3+2=b^3$，</p><p>则有$7a^3+2\equiv b^3\mod7$，</p><p>即$2=b^3\mod7$</p><p>由于$(b+7)^3\equiv b^3\mod7$，</p><p>且$1^3\equiv2^3\equiv1,3^3\equiv5^3\equiv6^3\equiv6,4^3\equiv4,7^3\equiv0$，</p><p>因此$7a^3+2=b^3$不成立。$\Box$</p><p><strong>EXERCISE 2.12</strong></p><p>已知整数$a_1,a_2,..a_k,b$和正整数$n$，设$d=\gcd(a_1,…,a_k,n)$，</p><p>求证：$a_1x_1+a_2x_2+…+a_kx_k \equiv b\mod n$有解$\{x_i\}_{i=1}^{k}$当且仅当$d|b$</p><p>暂无想法，待证</p><p><strong>EXERCISE 2.13</strong></p><p>暂无想法，待证</p><p><strong>EXERCISE 2.16</strong></p><p>已知$\{n_i\}_{i=1}^{k}$两两互质，对于整数$\{a_i\}_{i=1}^k,\{b_i\}_{i=1}^k$，设$d_i=\gcd(a_i,n_i)$，</p><p>求证：存在$x$满足$\forall i \in [1,k], a_ix\equiv b_i\mod n_i$当且仅当$\forall i\in[1,k],d_i|b_i$</p><p>暂无想法，待证</p><p><strong>EXERCISE 2.23</strong></p><p>求证：$\varphi(nm)=\gcd(n,m)*\varphi(\mathrm{lcm}(n,m))$</p><p>证明：</p><p>$n=\prod p_{i}^{a_i},m=\prod p_{i}^{b_i}$，</p><p>$\gcd(n,m)=\prod p_{i}^{min(a_i,b_i)},\mathrm{lcm}(n,m)=\prod p_{i}^{max(a_i,b_i)}$，</p><p>$\gcd(n,m)<em>\varphi(\mathrm{lcm}(n,m))=\prod p_{i}^{min(a_i,b_i)}</em>\prod p_{i}^{max(a_i,b_i)-1}(p_i-1)$</p><p>$=\prod p_{i}^{a_i+b_i-1}(p_i-1)=\varphi(nm)$。$\Box$</p><p><strong>EXERCISE 2.24</strong></p><p>已知$n$有$r$个不同的奇质因子，</p><p>求证：$2^r|\varphi(n)$</p><p>证明：</p><p>$\varphi(n)=\prod p_{i}^{e_i-1}(p_i-1)$，</p><p>其中$r$个奇质因子的贡献为$\prod_{i=1}^{r} p_i^{e_i-1}(p_i-1)$，</p><p>又因$p_i^{e_i-1}\ge1$且$p_i-1\equiv0\mod2$，</p><p>因此$2^r|\varphi(n)$。$\Box$</p><p><strong>EXERCISE 2.25</strong></p><p>定义$\varphi_{2}(n)=\sum_{i=0}^{n-1}[\gcd(i,n)=1\land\gcd(i+1,n)=1]$，</p><p>求证：对于$n=\prod_{i=1}^{r}p_i^{e_i}$，$\varphi_2(n)=n\prod_{i=1}^r(1-2/p_i)$</p><p>证明：</p><p>考虑$n’=p^e$，对于所有的$a\in[0,n’-1]$，不满足$\gcd(a,n’)=1\land\gcd(a+1,n’)=1$的值有：</p><p>$0\times p,1\times p-1,1\times p,$</p><p>$2\times p-1,2\times p,$</p><p>$…,$</p><p>$(p^{e-1}-1)\times p-1,(p^{e-1}-1)\times p，p^e-1$</p><p>将$i\times p-1$与$i\times p$配对，将$0\times p$与$p^e-1$配对，</p><p>发现共有$p^{e-1}$对不满足条件的数，</p><p>因此$\varphi_2(p^e)=p^e-2p^{e-1}=p^e(1-2/p)$，</p><p>故$\varphi(n)=\prod_{i=1}^{r}p_i^{e_i}(1-2/p_i)=n\prod_{i=1}^r(1-2/p_i)$。$\Box$</p>]]></content>
    
    
    <summary type="html">呜呜，数学好难</summary>
    
    
    
    <category term="数学" scheme="http://example.com/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Namomo-Camp-2021-day4-构造</title>
    <link href="http://example.com/2021/02/09/Namomo-Camp-2021-day4-%E6%9E%84%E9%80%A0/"/>
    <id>http://example.com/2021/02/09/Namomo-Camp-2021-day4-%E6%9E%84%E9%80%A0/</id>
    <published>2021-02-08T18:56:39.000Z</published>
    <updated>2021-02-08T21:11:27.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2020ICPC济南J"><a href="#2020ICPC济南J" class="headerlink" title="2020ICPC济南J"></a>2020ICPC济南J</h2> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>给一棵树上的所有点赋值使得$u,v$间有边当且仅当$w[u]|w[v]=2^{60}-1$（’$|$’为二进制按位或）</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>为了方便构造，我们对这棵树进行黑白染色，</p><p>为了防止同色点之间产生边，可以令黑点权值二进制前两位为$01$，白点为$10$，</p><p>再考虑对构造方法增加限制以方便构造，</p><p>由题意得，权值的二进制最大可以有$60$位，</p><p>显然，点数较少的一种颜色（以下当作白色）不会超过$50$种，</p><p>因此，我们可以增加一个限制：所有白点权值二进制中有且仅有一个$0$，</p><p>这样就能构造出一组权值互不相同的白点，</p><p>有了白点，黑点就可以直接确定了，例如</p><p><img src="2020icpc-jn-j.png" style="zoom:50%;" /></p><p>如果$w[1]=11…1110,w[4]=11…1101,w[5]=11…1011$（忽略前两位$01$和$10$，下同），</p><p>则$w[2]=00…0001,w[3]=00…0111,w[6]=w[7]=00…0010$，</p><p>此时白点的$0$位就相当于钥匙孔，黑点的$1$就相当于钥匙，一个钥匙（黑点）必须能打开周围的所有锁，</p><p>这样想，边的关系就确定了，游戏结束。</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">111</span>;</span><br><span class="line"><span class="keyword">const</span> ll M = (<span class="number">1LL</span> &lt;&lt; <span class="number">60</span>) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N], b[N], d[<span class="number">2</span>], t, cnt;</span><br><span class="line">ll c[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">    b[u] = b[fa] ^ <span class="number">1</span>;</span><br><span class="line">    c[u] |= <span class="number">1LL</span> &lt;&lt; (<span class="number">59</span> - b[u]);</span><br><span class="line">    d[b[u]]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> v : G[u])</span><br><span class="line">        <span class="keyword">if</span> (v != fa)</span><br><span class="line">            dfs(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        G[u].push_back(v);</span><br><span class="line">        G[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (d[<span class="number">0</span>] &gt; d[<span class="number">1</span>])t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] == t) &#123;</span><br><span class="line">            c[i] |= (<span class="number">1LL</span> &lt;&lt; cnt);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] != t) &#123;</span><br><span class="line">            ll tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> j : G[i])</span><br><span class="line">                <span class="keyword">if</span> (b[j] == t)</span><br><span class="line">                    tmp |= c[j];</span><br><span class="line">            c[i] = M ^ tmp;</span><br><span class="line">            c[i] &amp;= (M - (<span class="number">1LL</span> &lt;&lt; <span class="number">59</span>));</span><br><span class="line">            c[i] &amp;= (M - (<span class="number">1LL</span> &lt;&lt; <span class="number">58</span>));</span><br><span class="line">            c[i] |= <span class="number">1LL</span> &lt;&lt; (<span class="number">59</span> - b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)c[i] ^= M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="built_in">cout</span> &lt;&lt; c[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="2020ICPC济南E"><a href="#2020ICPC济南E" class="headerlink" title="2020ICPC济南E"></a>2020ICPC济南E</h2> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><h2 id="证明题"><a href="#证明题" class="headerlink" title="证明题"></a>证明题</h2> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>命题</span></div>    <div class="xContent"><div class="inner">        <p>对任意$2n-1$个数，一定存在$n$个数使其和为$n$的倍数</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>证明</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>构造问题的一般思路：</p><ul><li>增量构造，从$f(n-k)$到$f(n)$，一般要正推</li><li>递归构造，从$f(\frac{n}{k})$到$f(n)$，一般要逆推</li><li>转移构造，【从$f$到$g$】等价于【先从$f$到$h$，再从$h$到$g$】</li><li>增加限制，当构造自由度太高时可以视情况增加一些限制</li><li>待定参数，先考虑答案的状态，将其中一些参数设为未知，然后求出参数和答案的关系</li><li>调整构造，先按照某种方法构造出近似解，然后按照某种原则微调至答案</li><li>随机构造，利用题目里的随机性构造答案，一般和概率的计算有关</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2020ICPC济南J&quot;&gt;&lt;a href=&quot;#2020ICPC济南J&quot; class=&quot;headerlink&quot; title=&quot;2020ICPC济南J&quot;&gt;&lt;/a&gt;2020ICPC济南J&lt;/h2&gt; &lt;div class=&quot;xControl&quot;&gt;
    &lt;div clas</summary>
      
    
    
    
    <category term="Namomo Camp 2021" scheme="http://example.com/categories/Namomo-Camp-2021/"/>
    
    
    <category term="Namomo Camp" scheme="http://example.com/tags/Namomo-Camp/"/>
    
    <category term="构造" scheme="http://example.com/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>Namomo-Camp-2021-day1-DP</title>
    <link href="http://example.com/2021/02/09/Namomo-Camp-2021-day1-DP/"/>
    <id>http://example.com/2021/02/09/Namomo-Camp-2021-day1-DP/</id>
    <published>2021-02-08T18:27:51.000Z</published>
    <updated>2021-02-08T21:05:11.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="luoguP2612"><a href="#luoguP2612" class="headerlink" title="luoguP2612"></a><a href="https://www.luogu.com.cn/problem/P2612">luoguP2612</a></h2> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>设一个排列的权值为相邻两数差的绝对值之和，求长度为$n$的随机排列权值不小于$m$的概率（$n\le100$）</p>     </div></div>    </div> <div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>考虑一个填完的排列中每个数对答案的贡献，</p><p>设当前填的数为$b$，其前后的数分别为$a$和$c$，则有三种情况：</p><ol><li>当$[a&lt;b\land c&lt;b]==1$时，答案要加上$|a-b|+|b-c|=2\times b-a-c$，$b$对答案的贡献为$2\times b$</li><li>当$[a&lt;b\oplus c&lt;b]==1$时，答案要加上$|a-b|+|b-c|=|a-c|$，$b$对答案的贡献为$0$</li><li>当$[a&gt;b\land c&gt;b]==1$时，答案要加上$|a-b|+|b-c|=a+c-2\times b$，$b$对答案的贡献为$-2\times b$</li></ol><p>为了消去绝对值的影响，我们从小到大填数。</p><p>在从小到大填数时，出现情况1说明填当前位置时左右都非空，出现情况2说明左右有一个非空，出现情况3说明左右都为空，而且如果填在两端要特殊处理一下。</p><p>考虑用$f(i,j,k,t)$表示已经填了$i$个数，构成了$j$个连续段，答案为$k$，有$t$个端点填了数的方案数，其中$i\in[0,n],j\in[0,\lceil\frac{n}{2}\rceil],k\in[-4500,4500],t\in[0,2]$，</p><p>如果不填在两端，根据上面的情况，有三种转移方式：</p><p>$f(i,j,k,l)\longrightarrow f(i+1,j,k,l)$</p><p>$f(i,j,k,l)\longrightarrow f(i+1,j+1,k-2\times i,l)$</p><p>$f(i,j,k,l)\longrightarrow f(i+1,j-1,k+2\times i,l)$</p><p>如果填在两端，有两种转移方式（端点旁边是否有数）：</p><p>$f(i,j,k,l)\longrightarrow f(i,j,k+i,l+1)$</p><p>$f(i,j,k,l)\longrightarrow f(i,j+1,k-i,l+1)$</p><p>转移时注意乘上可以选择的方案数。</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <p>这题着实恶心，得面向数据范围编程，$k\le8$用long double，否则用__float128才能过，<del>所以写的又臭又长</del>，这里只放了dp部分的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">f[<span class="number">0</span>][<span class="number">0</span>][D][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> from = ~i &amp; <span class="number">1</span>, to = i &amp; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(f[to], <span class="number">0</span>, <span class="keyword">sizeof</span> f[to]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= min(i - <span class="number">1</span>, m); j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; M; k++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; <span class="number">3</span>; t++) &#123;</span><br><span class="line">                ff = f[from][j][k][t];</span><br><span class="line">                <span class="comment">//分别对应上面的转移方式</span></span><br><span class="line">                <span class="keyword">if</span> (j)f[to][j][k][t] += ff * (<span class="number">2</span> * j - t);</span><br><span class="line">                <span class="keyword">if</span> (k - <span class="number">2</span> * i &gt;= <span class="number">0</span>)f[to][j + <span class="number">1</span>][k - <span class="number">2</span> * i][t] += ff * (j + <span class="number">1</span> - t);</span><br><span class="line">                <span class="keyword">if</span> (j &gt; <span class="number">1</span> &amp;&amp; k + <span class="number">2</span> * i &lt; M)f[to][j - <span class="number">1</span>][k + <span class="number">2</span> * i][t] += ff * (j - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (t &lt; <span class="number">2</span> &amp;&amp; j &amp;&amp; k + i &lt; M)f[to][j][k + i][t + <span class="number">1</span>] += ff * (<span class="number">2</span> - t);</span><br><span class="line">                <span class="keyword">if</span> (t &lt; <span class="number">2</span> &amp;&amp; k - i &gt;= <span class="number">0</span>)f[to][j + <span class="number">1</span>][k - i][t + <span class="number">1</span>] += ff * (<span class="number">2</span> - t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="CF908G"><a href="#CF908G" class="headerlink" title="CF908G"></a><a href="https://codeforces.com/contest/908/problem/G">CF908G</a></h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>$S(n)$为$n$所有位数非降序排列后的数值，求$\sum_{i=1}^X S(i)\mod 10^9+7$（$X\le10^{700}$）</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p><del>应该是自己做过的第三道数位dp，数位dp好难啊</del></p><p>看这个数据范围，$10^{700}$，显然是数位dp，但有一说一确实挺怪的，</p><p>河里猜测，状态数应该是$700\times 700\times 10\times x$，</p><p><del>然后就不会了（</del></p><p>看了别人的题解，发现其实还是挺好懂的，</p><p>举个例子，$S(114514)$可以拆成三部分的贡献：$S(114514)=111445=111111+111+1$（其实是九部分，对应$1-9$），</p><p>因此可以分别枚举每个位置产生的贡献之和，然后分别加起来，</p><p>具体来说就是</p><p>没写完</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">710</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> X;</span><br><span class="line">ll f[N][<span class="number">10</span>][N][<span class="number">2</span>], ans, p10[N];</span><br><span class="line"><span class="function">ll <span class="title">dp</span><span class="params">(<span class="keyword">int</span> t, <span class="keyword">int</span> num, <span class="keyword">int</span> m, <span class="keyword">int</span> lim)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (t == X.size())<span class="keyword">return</span> !m;</span><br><span class="line">    <span class="keyword">if</span> (f[t][num][m][lim] != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> f[t][num][m][lim];</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (lim) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= X[t] - <span class="string">&#x27;0&#x27;</span>; i++) &#123;</span><br><span class="line">            res = (res + dp(t + <span class="number">1</span>, num, m - (i &gt;= num), i == X[t] - <span class="string">&#x27;0&#x27;</span>)) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            res = (res + dp(t + <span class="number">1</span>, num, m - (i &gt;= num), <span class="number">0</span>)) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[t][num][m][lim] = res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; X;</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">-1</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    p10[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)p10[i] = p10[i - <span class="number">1</span>] * <span class="number">10</span> % MOD;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)p10[i] = (p10[i - <span class="number">1</span>] + p10[i]) % MOD;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= X.size(); j++) &#123;</span><br><span class="line">            <span class="comment">// cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; j &lt;&lt; &quot;: &quot; &lt;&lt; (p10[j - 1]*dp(0, i, j, 1)) &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">            ans = (ans + (p10[j - <span class="number">1</span>]) * dp(<span class="number">0</span>, i, j, <span class="number">1</span>) % MOD) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="CF1142D"><a href="#CF1142D" class="headerlink" title="CF1142D"></a><a href="https://codeforces.com/contest/1442/problem/D">CF1142D</a></h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>给定$n$个非降序排列的数组，第$i$个数组长度为$t_i$，每次操作可以取出任意数组最左边的数（相当于删除）并加到答案里，求$k$次操作后的最大答案（$n,k\le3000$）</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>一个显然的结论是，最多只有一个数组被取数但没有被全取完，利用反证法容易证明。</p><p>根据这个结论，最暴力的办法就是考虑枚举没选中的数组然后对其他的做一遍背包，</p><p>但是这是$O(n^2k)$的，显然会超时，s思考后发现，在枚举不同数组进行背包的时候，只有两个物品不同，其他$n-2$个都是一样的，</p><p>因此可以考虑如何重复使用这些物品，起码要优化到$O(nk\log n)$才行，</p><p>既然带了个$\log$，大概率要用线段树，</p><p>朝着这个方向想想，结果就出来了，</p><p>我们可以在线段树节点$(i,l,r)$上用$f(i)$来储存除了$l,r$数组之外的所有物品做$01$背包后的结果，</p><p>这样就把$n^2k$枚举时的加减物品变成了从根到叶的加物品操作，</p><p>叶节点即为之前所枚举的没有被全取完的数组，复杂度$O(nk\log n)$。</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3030</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> ll INF = <span class="number">4e18</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; a[N], f[N], now;</span><br><span class="line"><span class="keyword">int</span> n, k, t[N];</span><br><span class="line">ll sum[N], ans;</span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;ll&gt; <span class="title">dp</span><span class="params">(<span class="built_in">vector</span>&lt;ll&gt; &amp;v, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; res = v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = k; j &gt;= a[i].size(); j--) &#123;</span><br><span class="line">            res[j] = max(res[j], res[j - a[i].size()] + sum[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        ans = max(ans, now[k]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= min(k,(<span class="keyword">int</span>)a[l].size()); i++) &#123;</span><br><span class="line">            res += a[l][i - <span class="number">1</span>];</span><br><span class="line">            ans = max(ans, res + now[k - i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; tmp = now;</span><br><span class="line">    now = dp(tmp, mid + <span class="number">1</span>, r);</span><br><span class="line">    solve(l, mid);</span><br><span class="line">    now = dp(tmp, l, mid);</span><br><span class="line">    solve(mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    now.resize(k + <span class="number">1</span>, -INF);</span><br><span class="line">    now[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; t[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>, tt; j &lt;= t[i]; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; tt;</span><br><span class="line">            a[i].push_back(tt);</span><br><span class="line">            sum[i] += tt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    solve(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="300iq-Contest-3-C"><a href="#300iq-Contest-3-C" class="headerlink" title="300iq Contest 3 C"></a><a href="https://codeforces.com/gym/102538/problem/C">300iq Contest 3 C</a></h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3030</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> s[N][N];</span><br><span class="line">ll ans, cnt;</span><br><span class="line"><span class="keyword">int</span> a[N][N], b[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ve[N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s[i][j];</span><br><span class="line">            cnt += s[i][j] == <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            a[i][j] |= a[i - <span class="number">1</span>][j] | a[i][j - <span class="number">1</span>];</span><br><span class="line">            a[i][j] |= i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>;</span><br><span class="line">            a[i][j] &amp;= s[i][j] == <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            b[i][j] |= b[i + <span class="number">1</span>][j] | b[i][j + <span class="number">1</span>];</span><br><span class="line">            b[i][j] |= i == n &amp;&amp; j == m;</span><br><span class="line">            b[i][j] &amp;= s[i][j] == <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!a[n][m]) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; cnt*(cnt - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!a[i][j] || !b[i][j]) &#123;</span><br><span class="line">                s[i][j] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ve[i + j].push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n + m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ve[i].size() == <span class="number">1</span>)ans += --cnt;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ve[i].size() == <span class="number">2</span>)ans++;</span><br><span class="line">        <span class="keyword">if</span> (ve[i].size())sort(ve[i].begin(), ve[i].end());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n + m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ve[i].size() == <span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> l = ve[i][<span class="number">1</span>], r = ve[i].back();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n + m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[l][j - l] != <span class="string">&#x27;.&#x27;</span>)l++;</span><br><span class="line">            <span class="keyword">if</span> (s[r + <span class="number">1</span>][j - (r + <span class="number">1</span>)] == <span class="string">&#x27;.&#x27;</span>)r++;</span><br><span class="line">            <span class="keyword">if</span> (l == r &amp;&amp; ve[j].size() != <span class="number">1</span>)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n + m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ve[i].size() == <span class="number">1</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> l = ve[i][<span class="number">0</span>], r = ve[i][ve[i].size() - <span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n + m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[l][j - l] != <span class="string">&#x27;.&#x27;</span>)l++;</span><br><span class="line">            <span class="keyword">if</span> (s[r + <span class="number">1</span>][j - (r + <span class="number">1</span>)] == <span class="string">&#x27;.&#x27;</span>)r++;</span><br><span class="line">            <span class="keyword">if</span> (l == r &amp;&amp; ve[j].size() != <span class="number">1</span>)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="CF729F"><a href="#CF729F" class="headerlink" title="CF729F"></a><a href="https://codeforces.com/contest/729/problem/F">CF729F</a></h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>给定一长度为$n$的数组，$A$和$B$分别从左右端取数字加到自己身上，设$A,B$的分数分别为$W_A,W_B$，$S=W_A-W_B$，$A$想让$S$更大，$B$想让$S$更小，$A,B$都会采取最优策略，求最终$S$的值（$n\le4000$）</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4040</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">66</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N], s[N];</span><br><span class="line"><span class="keyword">int</span> f[N][M &lt;&lt; <span class="number">1</span>][M][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[N][M &lt;&lt; <span class="number">1</span>][M][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s[r] - s[l - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z, <span class="keyword">bool</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = v ? INF : -INF, l = x, r = n + <span class="number">1</span> - (x - (y - M));</span><br><span class="line">    <span class="keyword">if</span> (vis[x][y][z][v])<span class="keyword">return</span> f[x][y][z][v];</span><br><span class="line">    vis[x][y][z][v] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = z; k &lt;= z + <span class="number">1</span> &amp;&amp; k &lt;= r - l - <span class="number">1</span>; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (v)res = min(res, dp(x, y - k, k, !v) - sum(r - k, r - <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">else</span> res = max(res, dp(x + k, y + k, k, !v) + sum(l + <span class="number">1</span>, l + k));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">abs</span>(res) == INF)res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> f[x][y][z][v] = res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dp(<span class="number">0</span>, M, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="2019CCPC秦皇岛G"><a href="#2019CCPC秦皇岛G" class="headerlink" title="2019CCPC秦皇岛G"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6737">2019CCPC秦皇岛G</a></h2><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题意</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>题解</span></div>    <div class="xContent"><div class="inner">        <p>在写了在写了</p>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>代码</span></div>    <div class="xContent"><div class="inner">        <p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N][N], f[<span class="number">1</span> &lt;&lt; <span class="number">24</span>];</span><br><span class="line"><span class="keyword">char</span> s[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b, w;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; pb, pw;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s[i] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; n + n); i++) &#123;</span><br><span class="line">            f[i] = INF;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ed = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>, st = (<span class="number">1</span> &lt;&lt; n + n) - <span class="number">1</span> - ed;</span><br><span class="line">        f[st] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = st; x &gt;= ed; x--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (__builtin_popcount(x) != n)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> y, A = <span class="number">0</span>, B = <span class="number">1</span>;</span><br><span class="line">            b.clear();</span><br><span class="line">            w.clear();</span><br><span class="line">            pb.clear();</span><br><span class="line">            pw.clear();</span><br><span class="line">            <span class="keyword">if</span> (x &amp; <span class="number">1</span>)B++;</span><br><span class="line">            <span class="keyword">else</span> A++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n + n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!((x &gt;&gt; i - <span class="number">1</span>) &amp; <span class="number">1</span>) &amp;&amp; ((x &gt;&gt; i) &amp; <span class="number">1</span>)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s[A][B] == <span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">                        b.push_back(i);</span><br><span class="line">                        pb.push_back(&#123;A, B&#125;);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[A][B] == <span class="string">&#x27;W&#x27;</span>) &#123;</span><br><span class="line">                        w.push_back(i);</span><br><span class="line">                        pw.push_back(&#123;A, B&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    y = x ^ (<span class="number">1</span> &lt;&lt; i) ^ (<span class="number">1</span> &lt;&lt; i - <span class="number">1</span>);</span><br><span class="line">                    f[y] = min(f[y], f[x] + a[A][B]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ((x &gt;&gt; i) &amp; <span class="number">1</span>)B++;</span><br><span class="line">                <span class="keyword">else</span> A++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.size(); i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; w.size(); j++) &#123;</span><br><span class="line">                    y = x ^ (<span class="number">1</span> &lt;&lt; b[i]) ^ (<span class="number">1</span> &lt;&lt; b[i] - <span class="number">1</span>) ^ (<span class="number">1</span> &lt;&lt; w[j]) ^ (<span class="number">1</span> &lt;&lt; w[j] - <span class="number">1</span>);</span><br><span class="line">                    f[y] = min(f[y], f[x] + <span class="built_in">abs</span>(a[pb[i].first][pb[i].second] - a[pw[j].first][pw[j].second]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, f[ed]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><ul><li>[ ] <a href="https://codeforces.com/gym/102900/problem/F">2020ICPC上海F</a></li><li>[ ] <a href="https://codeforces.com/contest/1428/problem/G2">CF1428G</a></li><li>[ ] <a href="https://codeforces.com/contest/1383/problem/C">CF1383C</a></li><li>[ ] <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6566">2018CCPC吉林</a></li><li>[ ] DTOJ4632（没找到链接）</li></ul>]]></content>
    
    
    <summary type="html">Namomo-Camp-2021-day1-DP</summary>
    
    
    
    <category term="Namomo Camp 2021" scheme="http://example.com/categories/Namomo-Camp-2021/"/>
    
    
    <category term="Namomo Camp" scheme="http://example.com/tags/Namomo-Camp/"/>
    
    <category term="DP" scheme="http://example.com/tags/DP/"/>
    
  </entry>
  
</feed>
