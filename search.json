[{"title":"2019CCPC哈尔滨","date":"2021-11-01T07:42:31.000Z","url":"/2021/11/01/2019CCPC%E5%93%88%E5%B0%94%E6%BB%A8/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"离谱，不知道现场判题机究竟多快，反正A和E带log疯狂TLE产生大量垃圾时间导致打银了。 A. Artful Paintings差分约束。考虑将黑色位置设为$1$，否则为$0$，设到第$i$个位置的前缀和为$S_i$，则 对于第一种限制，满足$S_R-S_{L-1}\\ge K$ 对于第二种限制，满足$S_N-S_R+S_{L-1}\\ge K$，由于$S_N$有单调性，可以先二分答案。 显然这是一个差分约束系统，除了上述约束外还有$0\\le S_i-S_{i-1}\\le1,\\ 0\\le S_i $，建图判断如果有负环则不合法。 （题外话：SPFA全程TLE，Bellman-Ford直接AC，关于SPFA，它死了） B. Binary NumbersC. Competition in Swiss-systemE. Exchanging Gifts拓扑排序，摩尔投票法。建反图求出每个第一类操作的贡献，然后map$O(n\\log n)$或摩尔投票法$O(n)$求众数。设众数出现次数$x$，总数为$n$，答案为$max(0,2x-n)$。 L. LRU Algorithmhash，字典树。"},{"title":"2020吉林省赛","date":"2021-11-01T07:42:17.000Z","url":"/2021/11/01/2020%E5%90%89%E6%9E%97%E7%9C%81%E8%B5%9B/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"NEERC之后的减压省赛，差点被碰到绝活题的瓜队爆杀。由于签到题太多，题解只写几道有价值的。 D. TrieAC自动机fail树上dfs序建可持久化线段树。 对联题。 H. Curious数论。属于是莫反裸题了，用$c_i$表示$i$在$a$中的出现次数，则有 $\\sum_{i=1}^{n}\\sum_{j=1}^{n}[gcd(i,j)=x]c_ic_j$ $=\\sum_{i=1}^{\\frac{n}{x}}\\sum_{j=1}^{\\frac{n}{x}}[gcd(i,j)=1]c_{ix}c_{jx}$ $=\\sum_{i=1}^{\\frac{n}{x}}\\sum_{j=1}^{\\frac{n}{x}}\\sum_{d|gcd(i,j)}\\mu(d)c_{ix}c_{jx}$ $=\\sum_{d=1}^{\\frac{n}{x}}\\mu(d)\\sum_{i=1}^{\\frac{n}{xd}}\\sum_{j=1}^{\\frac{n}{xd}}c_{ixd}c_{jxd}$ $O(n\\log n)$预处理后面那一块，然后对于每一个$x$调和级数暴力算答案，总复杂度$O(n\\log n)$。 I. World Tree贪心，dp。首先考虑树形dp，但是不会处理同层子树选择的优先级，考虑最优子结构贪心： 设 J. Situation博弈，记忆化搜索。一共$2\\times3^9$种状态，每种状态会转移到后继最值，复杂度$O(2\\times9\\times3^9)$，不熟悉的话可以补一补17女生赛的J题。 M. Upanishad数据结构。首先考虑如果询问改成求区间内所有出现次数为奇数的数的异或和，那么答案就是该区间的异或和，所以，$出现次数为偶数的数的异或和=区间异或和\\oplus区间set的异或和$，关键就是求出区间所有数的$set$。 考虑离线，枚举区间右端点，记录某数最后出现的位置，然后更新到树状数组上同时消除之前的影响以保证每个数只会出现一次，对于每个询问用树状数组求区间异或和即可。"},{"title":"2018-2019 ICPC, NEERC, Northern Eurasia Finals","date":"2021-11-01T07:41:54.000Z","url":"/2021/11/01/2018-2019-ICPC-NEERC-Northern-Eurasia-Finals/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"加训以来打的最艰难的一场，同时也是最难补题的一场，只能说欧洲的题目风格和中国还是差别不小，尤其是代码实现上的难度。 A. Alice the Fandp打表。19徐州打铁的教训：能暴力就不要分类讨论。 考虑$f_{a,b,c,d}$表示当前大比分为$a:b$，小比分为$c:d$时是否可行（用bool类型存储），状态数共$3\\times3\\times200\\times200$种。预处理出一局种合法的小比分情况，显然少于$400$种，因此可以$O(400)$进行dp时转移，总复杂度大概$O(1.2\\times10^8)$，同时开一个数组记录$dp$转移的路径以输出答案。 B. BitmatchingC. Cactus Search仙人掌背景的交互题，待补。 D. Distance SumE. Easy Chess签到。 F. FractionsG. Guest Student签到。 H. Harder SatisfiabilityI. Interval-Free Permutations计数，析合树。 题解待补充。 Code J. JS MinificationK. King Kog’s ReceptionL. Lazyland签到。 M. Minegraphed构造，模拟。赛中先tarjan缩点然后隔一层构造$3\\times(2n+1)$的层，这层分三个部分，如图所示 其中第$1,3$行为上层的落点和去往下层的洞，利用同层’+’的位置设置DAG的可达关系。 由于写起来过于模拟导致结束前5min才过，但是赛后发现好像有缩点都不用的简单写法，补完其它题学一下。"},{"title":"2021山东省赛","date":"2021-10-23T15:23:36.000Z","url":"/2021/10/23/2021%E5%B1%B1%E4%B8%9C%E7%9C%81%E8%B5%9B/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"这场7题没啥难度，但之后是真的难开，补一道卡一道，本来是要补10题的，考虑难度和效果就改9题了。 A. Beta Go待补，详见ZAwei的博客。 B. Build Roads随机化。$n$较大时答案大概率为$n-1$，较小时暴力，注意$L=R$的情况。 C. Cat Virus构造。考虑对题目增加限制：要求构造出来的必须是二叉树。当某点左子树答案为$A$，右子树答案为$B$，则该点子树的答案为$A\\times B+1$，只有一个孩子的结点答案是孩子的答案$+1$，所以可以递归构造出$k$。 D. Dyson Box签到。考虑重力向下，第$i$列高为$h_i$，答案就是 $有方块的位置数\\times2+\\sum_{i=1}^{n+1}|h_i-h_{i-1}|(h_{i+1}=0)$。 E. Evaluate ExpressionF. Birthday Cake字符串。hash老题了，考虑两个字符$a,b\\ (len(a)\\le len(b))$串拼接后合法的情况： $a,b$相同 $b$的前$\\frac{len(a)+len(b)}{2}$个字符是拼接后串的一半 $map$记录一下就行，小心被卡模数和自然溢出。 G. Grade Point Average签到。 H. Adventurer’s Guild签到。 I. Chemical Code线段树。考虑当加入一个元素、数字、括号时产生的影响： 元素：相当于单点加，如果后继是数字则要： 减去数字的影响（区间除） 单点修改，加某个值 加上数字的影响（区间乘） 数字：相当于区间乘，如果前驱是括号则： 找到配对的另一个括号 将括号扩起的区间乘某个值 括号：如果后继是数字，处理方法和元素相同 但是，由于模数不是质数，这个区间除就很麻烦了（需要CRT）。但是考虑数字只有$1-9$，因此可以将复杂度$\\times10$，懒标记永久化维护$1-9$在线段树上每个节点乘的次数，由于每次都是查询1到n，所以不用pushdown，常数还巨小。 Code J. Tuition AgentK. Piggy Calculator感觉很厉害，有时间就补。 L. Construction of 5G Base Station概率dp。考虑用$f_{i,j}$表示$i$连到$j$位置的基站的概率，则有 $f_{i,j}=\\frac{p_j}{1-\\prod^{n}_{k=1}{(1-p_k)}}\\prod_{i到k比j优先}(1-p_k)$ 直观来理解，$p_j$下面那一串是$i$连遍所有基站都失败的概率，后面那一块就是$i$和优先于$j$的所有基站都匹配失败的概率。 【前置芝士1：一次试验为真的概率为$p$，如果失败会重复直到为真结束，则其期望结束次数为$\\frac{1}{p}$】 （考虑等比数列求和 或 解方程：$E(x)=p\\times0+(1-p)\\times E(x)+1$即可证明） 设$E(x_i)$为匹配到基站$i$的人个数的期望，则有 $E(x_i)=\\frac{p_i}{1-\\prod^{n}_{k=1}{(1-p_k)}}\\sum_{j=1}^{n}\\prod_{j到k比i优先}(1-p_k)$ 然后题解说，容易发现这东西后一块能用前缀和递推，（赛中感觉不可以递推就没搞，下次遇到这种最好打打草稿看看规律） 一顿操作能$O(n)$求出$i\\in[1,n]$的$E(x_i)$， （PS：这里$Hile$改了2h才过） 但是题目要求的是$E(\\sum_{i=1}^{n}{x_i}^2)$，这时就要利用期望的线性性拆开了。 【前置芝士2：如果变量$X,Y$相互独立，则$E(X+Y)=E(X)+E(Y), E(XY)=E(X)E(Y)$】 $E(\\sum_{i=1}^{n}x_i^2)=\\sum_{i=1}^{n}E(x_i^2)$， 此时，对于每一个$E(x_i^2)$，$x_i$可以看作$n$个变量$y$之和，其中$y_i=1$表示第$i$个人连接了该基站，所以有 $E(x)=\\sum_{i=1}^{n}E(y_i)$ 原式可写为 $E((\\sum_{i=1}^{n}y_i)^2)=(E(x))^2-\\sum_{i=1}^{n}(E(y_i))^2+E(x)$ 其中$\\sum_{i=1}^n(E(y_i))^2$可以在求$E(x)$的过程中一起计算。 Code M. Matrix Problem签到。"},{"title":"2021CCPC东北四省赛","date":"2021-10-19T00:14:22.000Z","url":"/2021/10/19/2021CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"都1202年了竟然有比赛会出模板题（主要是没带模板，战犯++ A. Matrix一开始的思路是计算前$n$个数分布在恰好$k$行的方案数，然后考虑了容斥、斯特林数等一堆东西，发现又重又漏。 写完H，在Awei写C的时候突然反应过来，对于每个数在一行作为最小值的情况计算贡献完全没问题且公式简洁，遂ac。 当一道被a穿的题想不出来时，及时转换思路防止钻牛角尖。 （笑死，思路想歪，2h签不出到） Solution $n\\times(n^2-n)!\\times\\sum_{i=1}^{i=n}{n^2-i\\choose n-1}$ B. Cypher五页的题面三个字：大模拟。但其实听队友一说好像难度$90\\%$都在读题上，属于是出题人不怀好意了（ 题意建议自己读，体验一下（） Code C. Vertex DeletionD. Lowbit Solution 属于是势能线段树裸题了，势能函数$f(x)$为将$x$变为$2^k$的操作次数，显然$\\max\\{f(x)\\}=log_2(x)$，所以可以维护一个标记来表示区间内的数都为$2$的幂次，当一个区间被标记时，$1$操作就变成了区间乘二。复杂度$O(n\\log^2 n)$。 Code E. Easy Math Problem签到。Hile_Meow病发，wa一发才过。 F. PermutationG. BallH. Loneliness给出一个$n\\times n$的矩阵，你的分数初始为$1$。当分数为$x$时，往上下左右分别会变成$x/2,x\\times2,x+2,x-2$（往上时$x$必须为偶数），给出一个$k$，要求输出从$(1,1)$到$(n,n)$的一条路径（可重复经过$(n,n)$在内的点）使得在终点时分数恰好为$k$。 Solution 构造。考虑$n=100$，有足够的空间去构造答案，所以不妨倒过来想$k$是怎么构造出来的（考虑二进制），可以发现能根据$k$找到一个点$P(x,y)$满足在$P$点的答案为$0$，只往右或往下就能在$(n,n)$恰好得到$k$。由于$k\\le 10^{16}&lt;2^{60}$，$P$肯定在矩阵中。 然后考虑上下左右移动就是对于$2$的加减乘除：假设初始为偶数$x$，则$x$依次右上左下移动会得到$x+2,x/2+1,x/2-1,x-2$，也就是说$x$可以这么转一圈然后原地减$2$。 问题解决了，首先二进制分解$k$求出$P$点。第一步往下移动到$(2,1)$，当前答案为$2$，通过转圈操作使答案保持为$0$，逐步右移到和$P$同纵坐标，然后就一路往下到$P$，再构造$k$就好了。题目要求操作数小于$1000$，每次转圈消耗$4$步，从$(1,1)$到$(100,100)$需要$198$步，构造的答案显然小于$1000$。 （这种构造题建议给出充足的时间让不上机的队友玩，玩着玩着就出了） Code 赛中代码有点丑，不放了。 I. Takeaway签到。Boboge秒了。 J. Transform求三维点绕三维向量旋转某角度之后的结果。 Solution Rodriguez Formula板子题。 向量$v$绕单位向量$u$旋转$\\theta$后的$v’$为 $v’=v\\cos\\theta+u(u·v)(1-\\cos\\theta)+(u\\times v)\\sin\\theta$ （其中 $·$ 为三维点乘，$\\times$为三维叉乘） Solution K. City签到。Boboge秒了。 L. k-th Smallest Common SubstringM. Master of Shuangpin签到。Boboge秒了。"},{"title":"2020CCPC东北四省赛","date":"2021-10-15T15:52:07.000Z","url":"/2021/10/15/2020CCPC%E4%B8%9C%E5%8C%97%E5%9B%9B%E7%9C%81%E8%B5%9B/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["组队训练","/categories/%E7%BB%84%E9%98%9F%E8%AE%AD%E7%BB%83/"]],"content":"10.15打的组队赛，感觉自从使用了战术之后发挥稳定了不少，出了9/12题。 战术：Hile_Meow非必要不上机，Hile_Meow所读题意必让队友确认（经典wa签到+读歪题） A. Micro Structure Thread构造+MST。待补 B. Team网络流。考虑通过源汇点的流量控制$m$个组合，然后$B$向$A$建边，$A$向$C$建边，流量为1，费用为预处理的$f(u,v)$，$A$拆点控制流量为1。 虽然是求最大权值，但是因为所有路径长度相同，我们可以令每条边的权值为$M-f(u,v)$，然后跑dijkstra费用流，或者直接边权取反上spfa费用流（可处理负权边）。 C. Function数学。显然$f(x)\\le x$，而且根据这个后缀积的不可构造性，猜测大概率会收敛到一个$f(x)=x$的值（如$k000001$或一个个位数），看榜上过的挺快就直接冲了一发记忆化+暴力，跑得飞快。 D. Fall Guys签到。Boboge秒了。 E. Liner vectors构造。首先显然$n=k$且$n\\ne 1$时无解，然后考虑当$k\\%2=0$时，每一维度形成的列向量异或为0，说明任意列向量都等于其他$n-1$个列向量的异或和，矩阵不满秩。 接下来就好构造了，前$k+1$个向量的前$k+1$位形成一个对角线为0的矩阵，后面的行直接对前面$n-k-1$位每行分配一个$1$，每行剩下的$1$全放在最低的$k-1$位。 赛中写的唯一一道题，还被n=1,k=1卡了一发 Code F. Splendor贪心+大模拟的防ak。貌似不太可做 G. Halli Galli签到。Boboge秒了。 H. PepperLa’s String贪心。既然要优先最短，其次字典序最小。 分两类位置： 使字符串长度变短：删单个字符，删两个字符之一，删$16^k$个连续字符一端 使字符串长度不变：删连续相同字符一端 有第一类优先删第一类，如果能让字典序变小则删第一个能让字典序变小的，否则删最后一个第一类位置。 如果没有第一类位置，则删第一个字符。 Code I. PepperLa’s Cram School图论，小坑。由于边长相同，答案即为$d[i][j]$中最小值出现次数$/2$（一条边贡献两次），注意最小边权不一定是$1$。 J. Color the blocks签到。从$(x,y)$到$(x+1,y+2),(x-1,y+2),(x+3,y),(x-3,y)$建边，答案即为$2^{连通块数}$，显然$n\\ge4$时答案为$4$，其他手算一下就好了。 K. PepperLa’s Boastdp。考虑$f[i][j]$表示在$(i,j)$处的答案，则每次转移只会从左、上、左上移动过来或者从以$(i,j)$为右下角的一个$k\\times k$的矩形转移而来，也就是说要$O(1)$求出左上矩形内的最大值，这就是二维单调队列裸题了。 二维单调队列：对每行和每列都开一个单调队列，先把答案更新到该列中，再用该列的答案更新该行。 Code L. PepperLa’s Express搜索。首先遇到$\\min$和$\\max$来回套的题，第一反应必是二分答案。考虑二分了一个答案$mid$，可以先做一个bfs把所有已经和’@’距离在$mid$内的’*‘搞掉，然后考虑求出距离每个位置最远的’*‘，如果存在某个空格最远距离小于$mid$，说明可以把新的’@’放在这里使答案不大于$mid$。 赛中其实讨论了一个憨批做法，对于每一维来回扫一遍，从一维更新到三维，复杂度$O(8XYZ)$，但是写起来有点恶心，而且好像会爆空间，赛中没写完。 看出题人的方法有点牛，既然是找距离最远的点，那必然是$|x_i-x_j|+|y_i-y_j|+|z_i-z_j|$最大，我们可以把里面的正负号拆开，$i,j$各存$2^3$种，我们可以直接在为长为3的二进制互为补集的两种组合中求答案。 感觉这个拆绝对值符号的思路挺好，而且代码写起来也很简洁。 Code "},{"title":"2017CCPC女生赛","date":"2021-10-15T14:24:16.000Z","url":"/2021/10/15/2017CCPC%E5%A5%B3%E7%94%9F%E8%B5%9B/","tags":[["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["个人训练","/categories/%E4%B8%AA%E4%BA%BA%E8%AE%AD%E7%BB%83/"]],"content":"最近组队赛有点拉跨，于是个人vp加训，写写题解。 A - Automatic Judge签到，模拟。 Code B - Building Shopsdp。先对每个pair按照位置排序，$f[i][j]$为考虑前$i$个点，上一次选在$j$时的答案，则有 $f[i][j]=min(f[i][j],f[i-1][j]+x[i]-x[j])(i!=j)$ $f[i][j]=min(f[i][j],f[i-1][j]+c[i])(i==j)$ 最终答案为$max(\\{f[n][1…n]\\})$。 Code C - Coprime Sequence签到，处理出前后缀$\\gcd$然后枚举删的位置。 Code D - Deleting Edges图论。考虑最终形成的是一棵以0为根的生成树，可以枚举最后形成的树中每个点连向父亲的那条边，对每个结点来说，删边方案是相互独立的（因为树上每个点的父亲唯一），乘起来就是最终答案。 Code E - Easy Summation签到，怎么做都行。 Code F - Forgiveness赛中没过，待补。感觉是个$O(10\\times n\\times\\sqrt{n}\\times\\log{n})$的分块（应该没有$\\log{n}$？）。 （后记：Claris出的防AK，据说要bitset搞搞） G - Graph Theory图论。考虑每个1和前面的2匹配，剩下的1两两匹配，剩下2或者n为奇数就是No。 Code H - Happy Necklace打表，数学。题意等价求长为n且两个0的距离大于2的01串的方案数，赛中人工打了个表(2,3,4,6,9,13)，发现是$f[n]=f[n-1]+f[n-3]$，矩阵快速幂即可。 Code I - Innumerable Ancestors树论。结论：$k$个点中LCA深度最大的两点dfs序一定相邻（考虑反证法），所以对集合A,B按照dfs序排序并双指针处理。 Code J - Judicious Strategy博弈，打表。直接$O(n^3\\log n)$预处理出所有子串及其权值，然后打表，记录一个$(win,A,B)$的三元组表示胜负状态和玩家分数，注意一个字符串中的同一个子串只算出现一次（如”aaaa”中，”aa”的出现次数为1）。 Code "},{"title":"计算数论习题选证","date":"2021-02-08T18:57:50.000Z","url":"/2021/02/09/%E8%AE%A1%E7%AE%97%E6%95%B0%E8%AE%BA%E4%B9%A0%E9%A2%98%E9%80%89%E8%AF%81/","tags":[["数论","/tags/%E6%95%B0%E8%AE%BA/"]],"categories":[["数学","/categories/%E6%95%B0%E5%AD%A6/"]],"content":"这是为《A Computational Introduction to Number Theory and Algebra （Version 2）》（资源）中某些和ACM用数论有关的习题写的证明。还没看完，好难QAQ EXERCISE 1.17 已知正整数$a,b,c$满足$\\gcd(a,b)=1$，$c\\ge(a-1)(b-1)$， 求证：总是存在非负整数$s,t$满足$c=as+bt$ 证明1： 当$s\\in[0,b-1]$时$as$模$b$的结果恰好构成$b$的完全剩余系， 所以存在$s\\in[0,b-1]$使$n\\equiv as\\mod b$成立， 此时$bt=c-as\\ge (a-1)(b-1)-as=(b-1-s)a-(b-1)\\ge -b+1$， 即$t\\ge\\frac{-b+1}{b}&gt;\\frac{-b}{b}=-1$。$\\Box$ 证明2： 考虑其$c=as+bt$存在非整数解$(s,t)$的几何意义， 即直线$y=-\\frac{b}{a}x+\\frac{c}{a}$在第一象限（含坐标轴）过任意整点。 EXERCISE 1.27 已知$a,b\\in Z$， 求证：$\\gcd(a+b,\\mathrm{lcm}(a,b))=\\gcd(a,b)$ 证明： 设$d=\\gcd(a,b),s=\\frac{a}{d},t=\\frac{b}{d}$， 易知$\\gcd(s,t)=1$， $\\gcd(a+b,\\mathrm{lcm}(a,b))$ $=\\gcd(d(s+t),\\frac{ab}{d})$ $=d\\gcd(s+t,st)$ 又因$(s+t)\\nmid s$且$(s+t)\\nmid t$，$\\gcd(s+t,st)=1$， 即$\\gcd(a+b,\\mathrm{lcm}(a,b))=d=\\gcd(a,b)$。$\\Box$ EXERCISE 2.10 求证：不存在$a,b$满足$7a^3+2=b^3$ 证明： 若$7a^3+2=b^3$， 则有$7a^3+2\\equiv b^3\\mod7$， 即$2=b^3\\mod7$ 由于$(b+7)^3\\equiv b^3\\mod7$， 且$1^3\\equiv2^3\\equiv1,3^3\\equiv5^3\\equiv6^3\\equiv6,4^3\\equiv4,7^3\\equiv0$， 因此$7a^3+2=b^3$不成立。$\\Box$ EXERCISE 2.12 已知整数$a_1,a_2,..a_k,b$和正整数$n$，设$d=\\gcd(a_1,…,a_k,n)$， 求证：$a_1x_1+a_2x_2+…+a_kx_k \\equiv b\\mod n$有解$\\{x_i\\}_{i=1}^{k}$当且仅当$d|b$ 暂无想法，待证 EXERCISE 2.13 暂无想法，待证 EXERCISE 2.16 已知$\\{n_i\\}_{i=1}^{k}$两两互质，对于整数$\\{a_i\\}_{i=1}^k,\\{b_i\\}_{i=1}^k$，设$d_i=\\gcd(a_i,n_i)$， 求证：存在$x$满足$\\forall i \\in [1,k], a_ix\\equiv b_i\\mod n_i$当且仅当$\\forall i\\in[1,k],d_i|b_i$ 暂无想法，待证 EXERCISE 2.23 求证：$\\varphi(nm)=\\gcd(n,m)*\\varphi(\\mathrm{lcm}(n,m))$ 证明： $n=\\prod p_{i}^{a_i},m=\\prod p_{i}^{b_i}$， $\\gcd(n,m)=\\prod p_{i}^{min(a_i,b_i)},\\mathrm{lcm}(n,m)=\\prod p_{i}^{max(a_i,b_i)}$， $\\gcd(n,m)\\varphi(\\mathrm{lcm}(n,m))=\\prod p_{i}^{min(a_i,b_i)}\\prod p_{i}^{max(a_i,b_i)-1}(p_i-1)$ $=\\prod p_{i}^{a_i+b_i-1}(p_i-1)=\\varphi(nm)$。$\\Box$ EXERCISE 2.24 已知$n$有$r$个不同的奇质因子， 求证：$2^r|\\varphi(n)$ 证明： $\\varphi(n)=\\prod p_{i}^{e_i-1}(p_i-1)$， 其中$r$个奇质因子的贡献为$\\prod_{i=1}^{r} p_i^{e_i-1}(p_i-1)$， 又因$p_i^{e_i-1}\\ge1$且$p_i-1\\equiv0\\mod2$， 因此$2^r|\\varphi(n)$。$\\Box$ EXERCISE 2.25 定义$\\varphi_{2}(n)=\\sum_{i=0}^{n-1}[\\gcd(i,n)=1\\land\\gcd(i+1,n)=1]$， 求证：对于$n=\\prod_{i=1}^{r}p_i^{e_i}$，$\\varphi_2(n)=n\\prod_{i=1}^r(1-2/p_i)$ 证明： 考虑$n’=p^e$，对于所有的$a\\in[0,n’-1]$，不满足$\\gcd(a,n’)=1\\land\\gcd(a+1,n’)=1$的值有： $0\\times p,1\\times p-1,1\\times p,$ $2\\times p-1,2\\times p,$ $…,$ $(p^{e-1}-1)\\times p-1,(p^{e-1}-1)\\times p，p^e-1$ 将$i\\times p-1$与$i\\times p$配对，将$0\\times p$与$p^e-1$配对， 发现共有$p^{e-1}$对不满足条件的数， 因此$\\varphi_2(p^e)=p^e-2p^{e-1}=p^e(1-2/p)$， 故$\\varphi(n)=\\prod_{i=1}^{r}p_i^{e_i}(1-2/p_i)=n\\prod_{i=1}^r(1-2/p_i)$。$\\Box$"},{"title":"Namomo-Camp-2021-day4-构造","date":"2021-02-08T18:56:39.000Z","url":"/2021/02/09/Namomo-Camp-2021-day4-%E6%9E%84%E9%80%A0/","tags":[["Namomo Camp","/tags/Namomo-Camp/"],["构造","/tags/%E6%9E%84%E9%80%A0/"]],"categories":[["Namomo Camp 2021","/categories/Namomo-Camp-2021/"]],"content":"2020ICPC济南J 题意 给一棵树上的所有点赋值使得$u,v$间有边当且仅当$w[u]|w[v]=2^{60}-1$（’$|$’为二进制按位或） 题解 为了方便构造，我们对这棵树进行黑白染色， 为了防止同色点之间产生边，可以令黑点权值二进制前两位为$01$，白点为$10$， 再考虑对构造方法增加限制以方便构造， 由题意得，权值的二进制最大可以有$60$位， 显然，点数较少的一种颜色（以下当作白色）不会超过$50$种， 因此，我们可以增加一个限制：所有白点权值二进制中有且仅有一个$0$， 这样就能构造出一组权值互不相同的白点， 有了白点，黑点就可以直接确定了，例如 如果$w[1]=11…1110,w[4]=11…1101,w[5]=11…1011$（忽略前两位$01$和$10$，下同）， 则$w[2]=00…0001,w[3]=00…0111,w[6]=w[7]=00…0010$， 此时白点的$0$位就相当于钥匙孔，黑点的$1$就相当于钥匙，一个钥匙（黑点）必须能打开周围的所有锁， 这样想，边的关系就确定了，游戏结束。 代码 2020ICPC济南E 题意 在写了在写了 题解 在写了在写了 代码 在写了在写了 证明题 命题 对任意$2n-1$个数，一定存在$n$个数使其和为$n$的倍数 证明 在写了在写了 总结构造问题的一般思路： 增量构造，从$f(n-k)$到$f(n)$，一般要正推 递归构造，从$f(\\frac{n}{k})$到$f(n)$，一般要逆推 转移构造，【从$f$到$g$】等价于【先从$f$到$h$，再从$h$到$g$】 增加限制，当构造自由度太高时可以视情况增加一些限制 待定参数，先考虑答案的状态，将其中一些参数设为未知，然后求出参数和答案的关系 调整构造，先按照某种方法构造出近似解，然后按照某种原则微调至答案 随机构造，利用题目里的随机性构造答案，一般和概率的计算有关 "},{"title":"Namomo-Camp-2021-day1-DP","date":"2021-02-08T18:27:51.000Z","url":"/2021/02/09/Namomo-Camp-2021-day1-DP/","tags":[["Namomo Camp","/tags/Namomo-Camp/"],["DP","/tags/DP/"]],"categories":[["Namomo Camp 2021","/categories/Namomo-Camp-2021/"]],"content":"luoguP2612 题意 设一个排列的权值为相邻两数差的绝对值之和，求长度为$n$的随机排列权值不小于$m$的概率（$n\\le100$） 题解 考虑一个填完的排列中每个数对答案的贡献， 设当前填的数为$b$，其前后的数分别为$a$和$c$，则有三种情况： 当$[a&lt;b\\land c&lt;b]==1$时，答案要加上$|a-b|+|b-c|=2\\times b-a-c$，$b$对答案的贡献为$2\\times b$ 当$[a&lt;b\\oplus c&lt;b]==1$时，答案要加上$|a-b|+|b-c|=|a-c|$，$b$对答案的贡献为$0$ 当$[a&gt;b\\land c&gt;b]==1$时，答案要加上$|a-b|+|b-c|=a+c-2\\times b$，$b$对答案的贡献为$-2\\times b$ 为了消去绝对值的影响，我们从小到大填数。 在从小到大填数时，出现情况1说明填当前位置时左右都非空，出现情况2说明左右有一个非空，出现情况3说明左右都为空，而且如果填在两端要特殊处理一下。 考虑用$f(i,j,k,t)$表示已经填了$i$个数，构成了$j$个连续段，答案为$k$，有$t$个端点填了数的方案数，其中$i\\in[0,n],j\\in[0,\\lceil\\frac{n}{2}\\rceil],k\\in[-4500,4500],t\\in[0,2]$， 如果不填在两端，根据上面的情况，有三种转移方式： $f(i,j,k,l)\\longrightarrow f(i+1,j,k,l)$ $f(i,j,k,l)\\longrightarrow f(i+1,j+1,k-2\\times i,l)$ $f(i,j,k,l)\\longrightarrow f(i+1,j-1,k+2\\times i,l)$ 如果填在两端，有两种转移方式（端点旁边是否有数）： $f(i,j,k,l)\\longrightarrow f(i,j,k+i,l+1)$ $f(i,j,k,l)\\longrightarrow f(i,j+1,k-i,l+1)$ 转移时注意乘上可以选择的方案数。 代码 这题着实恶心，得面向数据范围编程，$k\\le8$用long double，否则用__float128才能过，所以写的又臭又长，这里只放了dp部分的代码 CF908G 题意 $S(n)$为$n$所有位数非降序排列后的数值，求$\\sum_{i=1}^X S(i)\\mod 10^9+7$（$X\\le10^{700}$） 题解 应该是自己做过的第三道数位dp，数位dp好难啊 看这个数据范围，$10^{700}$，显然是数位dp，但有一说一确实挺怪的， 河里猜测，状态数应该是$700\\times 700\\times 10\\times x$， 然后就不会了（ 看了别人的题解，发现其实还是挺好懂的， 举个例子，$S(114514)$可以拆成三部分的贡献：$S(114514)=111445=111111+111+1$（其实是九部分，对应$1-9$）， 因此可以分别枚举每个位置产生的贡献之和，然后分别加起来， 具体来说就是 没写完 代码 CF1142D 题意 给定$n$个非降序排列的数组，第$i$个数组长度为$t_i$，每次操作可以取出任意数组最左边的数（相当于删除）并加到答案里，求$k$次操作后的最大答案（$n,k\\le3000$） 题解 一个显然的结论是，最多只有一个数组被取数但没有被全取完，利用反证法容易证明。 根据这个结论，最暴力的办法就是考虑枚举没选中的数组然后对其他的做一遍背包， 但是这是$O(n^2k)$的，显然会超时，s思考后发现，在枚举不同数组进行背包的时候，只有两个物品不同，其他$n-2$个都是一样的， 因此可以考虑如何重复使用这些物品，起码要优化到$O(nk\\log n)$才行， 既然带了个$\\log$，大概率要用线段树， 朝着这个方向想想，结果就出来了， 我们可以在线段树节点$(i,l,r)$上用$f(i)$来储存除了$l,r$数组之外的所有物品做$01$背包后的结果， 这样就把$n^2k$枚举时的加减物品变成了从根到叶的加物品操作， 叶节点即为之前所枚举的没有被全取完的数组，复杂度$O(nk\\log n)$。 代码 300iq Contest 3 C 题意 在写了在写了 题解 在写了在写了 代码 CF729F 题意 给定一长度为$n$的数组，$A$和$B$分别从左右端取数字加到自己身上，设$A,B$的分数分别为$W_A,W_B$，$S=W_A-W_B$，$A$想让$S$更大，$B$想让$S$更小，$A,B$都会采取最优策略，求最终$S$的值（$n\\le4000$） 题解 在写了在写了 代码 2019CCPC秦皇岛G 题意 在写了在写了 题解 在写了在写了 代码 代码： [ ] 2020ICPC上海F [ ] CF1428G [ ] CF1383C [ ] 2018CCPC吉林 [ ] DTOJ4632（没找到链接） "}]